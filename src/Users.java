
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JOE
 */
public class Users extends javax.swing.JFrame {
 //String dbname="sacco"; String username="root"; String dbpword="";
 //String server="jdbc:mysql://localhost:3306/sacco"; 
    Home access=new Home(); String accounttype;
 String[] cols={"No.","ACCOUNT TYPE","USERNAME","PASSWORD","USER ID"};
 String staffname;
   DefaultTableModel   userstableModel=new DefaultTableModel(cols,0){
   @Override
   public boolean isCellEditable(int row,int column){
        return column == 0;
   }  };
    /**
     * Creates new form Users
     */
    public Users() {
        initComponents();
        usersTable.getTableHeader().setReorderingAllowed(false);
         usersTable.getColumnModel().getColumn(0).setPreferredWidth(1);
      access.setScreensize();  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        useraccountsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        accounttypeCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        ownerTxt = new javax.swing.JTextField();
        usertypeTxt = new javax.swing.JTextField();
        pwordTxt = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        useraccountsPanel.setBackground(new java.awt.Color(102, 0, 102));
        useraccountsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Accounts", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 204))); // NOI18N
        jPanel1.setOpaque(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 204))); // NOI18N
        jPanel2.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Account Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 0, 153))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Username:");

        usernameTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Password:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Account Type:");

        accounttypeCombo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        accounttypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrator", "User" }));
        accounttypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accounttypeComboActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("User ID:");

        ownerTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ownerTxt.setToolTipText("ENTER STAFF ID NO");

        usertypeTxt.setEditable(false);

        pwordTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ownerTxt)
                    .addComponent(usernameTxt)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(accounttypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usertypeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                    .addComponent(pwordTxt))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ownerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(pwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usertypeTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(accounttypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.add(jPanel3);
        jPanel3.setBounds(12, 2, 415, 288);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Accounts", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 0, 153))); // NOI18N
        jPanel4.setOpaque(false);

        usersTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        usersTable.setForeground(new java.awt.Color(153, 0, 153));
        usersTable.setModel(userstableModel);
        usersTable.setFillsViewportHeight(true);
        usersTable.setGridColor(new java.awt.Color(153, 0, 153));
        usersTable.setRowHeight(25);
        usersTable.setRowMargin(2);
        usersTable.setSelectionBackground(new java.awt.Color(153, 0, 153));
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usersTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4);
        jPanel4.setBounds(441, 2, 690, 288);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setOpaque(false);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton2)
                .addGap(37, 37, 37)
                .addComponent(jButton3)
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5);
        jPanel5.setBounds(390, 350, 454, 106);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1203, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1227, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jScrollPane2.setViewportView(jPanel6);

        javax.swing.GroupLayout useraccountsPanelLayout = new javax.swing.GroupLayout(useraccountsPanel);
        useraccountsPanel.setLayout(useraccountsPanelLayout);
        useraccountsPanelLayout.setHorizontalGroup(
            useraccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(useraccountsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1223, Short.MAX_VALUE)
                .addContainerGap())
        );
        useraccountsPanelLayout.setVerticalGroup(
            useraccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(useraccountsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(useraccountsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  public  String md5(String pwordsource){
        try {
            MessageDigest md=MessageDigest.getInstance("MD5");
            byte[] bytes=md.digest(pwordsource.getBytes("UTF-8"));
           
            return getString(bytes);
            
        } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
            Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        
  }  
    
    private  String getString( byte[] bytes ) 
{
  StringBuffer sb = new StringBuffer();
  for( int i=0; i<bytes.length; i++ )     
  {
     byte b = bytes[ i ];
     String hex = Integer.toHexString((int) 0x00FF & b);
     if (hex.length() == 1) 
     {
        sb.append("0");
     }
     sb.append( hex );
  }
  return sb.toString();
}

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   if(ownerTxt.getText().isEmpty()){
JOptionPane.showMessageDialog(null, "Please enter Account Owner!", "Account Owner Required", JOptionPane.WARNING_MESSAGE);
 }else if(usernameTxt.getText().isEmpty()){
 JOptionPane.showMessageDialog(null, "Please enter Username!", "Username Required", JOptionPane.WARNING_MESSAGE);
}else if(pwordTxt.getText().isEmpty()){
JOptionPane.showMessageDialog(null, "Please enter Account Password!", "Account Password Required", JOptionPane.WARNING_MESSAGE);
}else if(accounttype==null){
JOptionPane.showMessageDialog(null, "Please select Account Type!", "Account Type Required", JOptionPane.WARNING_MESSAGE);
}
else{
       try {
           Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
           String sqluser="SELECT USERS.OWNER,USERS.USERNAME,USERS.PASSWORD, STAFF.STAFFNAME FROM USERS LEFT JOIN STAFF ON "
                   + "USERS.OWNER=STAFF.STAFFNO WHERE USERS.OWNER='"+ownerTxt.getText()+"'";
           com.mysql.jdbc.PreparedStatement pstuser=(com.mysql.jdbc.PreparedStatement) connectDb.prepareStatement(sqluser);
           ResultSet rst=pstuser.executeQuery(); int v=0;
     while(rst.next()){
         staffname=rst.getString(4);
     v++;
     }      
if(v>0)    {
JOptionPane.showMessageDialog(null, "Account with the details exists!", "Account Exists", JOptionPane.WARNING_MESSAGE);
}    else{   
           int choice=JOptionPane.showConfirmDialog(null, "Do you want to add new account for "+ownerTxt.getText(),"Confirm",JOptionPane.YES_NO_OPTION);
           if(choice==JOptionPane.YES_OPTION){
       String insertsql="INSERT INTO USERS VALUES(?,?,?,?,?)";        
   com.mysql.jdbc.PreparedStatement pstuser2=(com.mysql.jdbc.PreparedStatement) connectDb.prepareStatement(insertsql);
  // pstuser2.setInt(1, 0);
     pstuser2.setString(1, accounttype.toUpperCase());
    pstuser2.setString(2, usernameTxt.getText());
     pstuser2.setString(3, md5(pwordTxt.getText())); 
      pstuser2.setString(4, ownerTxt.getText());
         pstuser2.setString(5, "UNLOCKED");
  int u=pstuser2.executeUpdate();
  if(u>0){
      getUsers();
   usernameTxt.setText(null);  pwordTxt.setText(null); ownerTxt.setText(null);
  JOptionPane.showMessageDialog(null, "New account added successfully","Successfull",JOptionPane.INFORMATION_MESSAGE);
  
  }else{
  JOptionPane.showMessageDialog(null, "Staff ID number must be unique","Staff ID Exists",JOptionPane.WARNING_MESSAGE);
  }
           }
}
       } catch (SQLException ex) {
           Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
       }
}
    }//GEN-LAST:event_jButton1ActionPerformed
public void getUsers(){
     try {
         Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
      String getusersql="SELECT * FROM USERS";   
       com.mysql.jdbc.PreparedStatement pstuser2=(com.mysql.jdbc.PreparedStatement) connectDb.prepareStatement(getusersql);   
       ResultSet rst=pstuser2.executeQuery();
       int t=usersTable.getRowCount(); int y=0;
       for(int x=0;x<t;x++){
       userstableModel.removeRow(0);
       }
       while(rst.next()){
       userstableModel.addRow(new Object[]{y+1,rst.getString(1),rst.getString(2),"**********",rst.getString(4)});
      y++; }
     } catch (SQLException ex) {
         Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
     }
}
    private void accounttypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accounttypeComboActionPerformed
       accounttype=""+accounttypeCombo.getSelectedItem();
       usertypeTxt.setText(accounttype);
    }//GEN-LAST:event_accounttypeComboActionPerformed

    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        try {
            int t=usersTable.getSelectedRow();
            ownerTxt.setText(String.valueOf(usersTable.getValueAt(t, 4)));
            usernameTxt.setText(String.valueOf(usersTable.getValueAt(t, 2)));
            pwordTxt.setText(String.valueOf(usersTable.getValueAt(t, 3)));
            usertypeTxt.setText(String.valueOf(usersTable.getValueAt(t, 1)));
            
            Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
            String sqluser="SELECT USERS.OWNER,USERS.USERNAME,USERS.PASSWORD, STAFF.STAFFNAME FROM USERS LEFT JOIN STAFF ON "
                    + "USERS.OWNER=STAFF.STAFFNO WHERE USERS.OWNER='"+ownerTxt.getText()+"'";
            com.mysql.jdbc.PreparedStatement pstuser=(com.mysql.jdbc.PreparedStatement) connectDb.prepareStatement(sqluser);
            ResultSet rst=pstuser.executeQuery(); int v=0;
            while(rst.next()){
                staffname=rst.getString(4);
                v++;      
            }  } catch (SQLException ex) {
            Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_usersTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     if(ownerTxt.getText().trim().length()==0){
  JOptionPane.showMessageDialog(null, "Please select account from the User Accounts List!","Select Account",JOptionPane.WARNING_MESSAGE);
     }else{
         try {
             Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
 int choice=JOptionPane.showConfirmDialog(null, "Do you want to Update "+staffname+"'S Account details?","Confirm",JOptionPane.YES_NO_OPTION);
 if(choice==JOptionPane.YES_OPTION){
  String getusersql="UPDATE USERS SET USERNAME='"+usernameTxt.getText()+"', PASSWORD='"+md5(pwordTxt.getText())+"', TYPE='"+usertypeTxt.getText()+"',"
          + "STATUS='UNLOCKED' WHERE OWNER='"+ownerTxt.getText()+"'";
          com.mysql.jdbc.PreparedStatement pstuser2=(com.mysql.jdbc.PreparedStatement) connectDb.prepareStatement(getusersql);
         int u= pstuser2.executeUpdate();
         if(u>0){
   JOptionPane.showMessageDialog(null, " "+staffname+"'S Account details updated successfully!","Update Successful",JOptionPane.INFORMATION_MESSAGE);       
         } 
         else{
    JOptionPane.showMessageDialog(null, "Staff ID no. "+ownerTxt.getText()+" not found!","Invalid Staff ID",JOptionPane.WARNING_MESSAGE);            
         }
             }     } catch (SQLException ex) {
             Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
         }
     
     }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     int f=usersTable.getSelectedRow();
     if(ownerTxt.getText().trim().length()==0){
            JOptionPane.showMessageDialog(null, "Please select account from the User Accounts List!","Select Account",JOptionPane.WARNING_MESSAGE);
        }else{
            try {
                Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
                int choice=JOptionPane.showConfirmDialog(null, "Do you want to DELETE "+ownerTxt.getText()+"'S User account?","Confirm",JOptionPane.YES_NO_OPTION);
                if(choice==JOptionPane.YES_OPTION){
                    String getusersql="DELETE FROM USERS WHERE TYPE='"+usertypeTxt.getText()+"' AND "
                    + "OWNER='"+ownerTxt.getText()+"'";
                    com.mysql.jdbc.PreparedStatement pstuser2=(com.mysql.jdbc.PreparedStatement) connectDb.prepareStatement(getusersql);
                    int u= pstuser2.executeUpdate();
                    if(u>0){
                        getUsers();
            JOptionPane.showMessageDialog(null, "  "+ownerTxt.getText()+" Deleted successfully!","Account Deleted",JOptionPane.INFORMATION_MESSAGE);
                clearTxts();
                    }
                }     } catch (SQLException ex) {
                    Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
    }//GEN-LAST:event_jButton3ActionPerformed
public void clearTxts(){
ownerTxt.setText(null); usertypeTxt.setText(null); usernameTxt.setText(null); pwordTxt.setText(null);

}
    /**
     * @param args the command line arguments
     */
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accounttypeCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField ownerTxt;
    private javax.swing.JPasswordField pwordTxt;
    public javax.swing.JPanel useraccountsPanel;
    private javax.swing.JTextField usernameTxt;
    private javax.swing.JTable usersTable;
    private javax.swing.JTextField usertypeTxt;
    // End of variables declaration//GEN-END:variables
}
