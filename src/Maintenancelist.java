
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JOE
 */
public class Maintenancelist extends javax.swing.JFrame {
 DefaultComboBoxModel descriptioncomboModel=new DefaultComboBoxModel();  
  SimpleDateFormat sdf=new SimpleDateFormat("dd MMM,yyyy");
   DefaultComboBoxModel clientnameComboModel=new DefaultComboBoxModel();  
 String[] cols3={"No.","CLIENT","CONTRACT NO","DESCRIPTION"," Q1 | 1st HALF PM","Q2 PM","  Q3 | 2nd HALF PM"," Q4 PM","BILLING"}; 
  DefaultTableModel     maintenancetableModel =new DefaultTableModel(cols3,0){
         @Override
   public boolean isCellEditable(int row,int column){
        return column == 0;
   }
    };
  java.sql.Date q1date,q2date, q3date,q4date,firsthalfdate,secondhalfdate;  
  String dbq1,dbq2,dbq3,dbq4,db1st,db2nd;
  String updq1,updq2,updq3,updq4,updfirst,updsecond;
  String client,descrip,clientNo;  Home access=new Home(); 
    public Maintenancelist() {
        initComponents();
          maintenanceTable.getTableHeader().setReorderingAllowed(false);
           maintenanceTable.getColumnModel().getColumn(0).setPreferredWidth(1);  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        maintenancelistPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        maintenanceTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        contractnumTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pmscheduleTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        billscheduleTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        statusTxt = new javax.swing.JTextField();
        maintenancedatePanel = new javax.swing.JPanel();
        quartersPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        q1DatePicker = new org.jdesktop.swingx.JXDatePicker();
        q1dateTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        q3DatePicker = new org.jdesktop.swingx.JXDatePicker();
        q3dateTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        q4dateTxt = new javax.swing.JTextField();
        q4DatePicker = new org.jdesktop.swingx.JXDatePicker();
        q2dateTxt = new javax.swing.JTextField();
        q2DatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel10 = new javax.swing.JLabel();
        semisPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        secondhalfDatePicker = new org.jdesktop.swingx.JXDatePicker();
        secondhalfdateTxt = new javax.swing.JTextField();
        firsthalfdateTxt = new javax.swing.JTextField();
        firsthalfDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        maintenancelistPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PREVENTIVE MAINTENCE LIST", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 204))); // NOI18N

        maintenanceTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maintenanceTable.setModel(maintenancetableModel);
        maintenanceTable.setFillsViewportHeight(true);
        maintenanceTable.setGridColor(new java.awt.Color(153, 0, 153));
        maintenanceTable.setRowHeight(30);
        maintenanceTable.setRowMargin(2);
        maintenanceTable.setSelectionBackground(new java.awt.Color(204, 0, 204));
        jScrollPane1.setViewportView(maintenanceTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PM SCHEDULE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 204))); // NOI18N

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Client & Contract ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 0, 153))); // NOI18N

        jLabel1.setText("CLIENT:");

        jComboBox1.setModel(clientnameComboModel);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("CONTRACT:");

        jComboBox2.setModel(descriptioncomboModel);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel3.setText("CONTRACT NO:");

        contractnumTxt.setEditable(false);

        jLabel4.setText("PM SCHEDULE:");

        pmscheduleTxt.setEditable(false);

        jLabel5.setText("BILLING SCHEDULE:");

        billscheduleTxt.setEditable(false);

        jLabel6.setText(" STATUS:");

        statusTxt.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contractnumTxt))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 243, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(billscheduleTxt, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusTxt, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pmscheduleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(pmscheduleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(billscheduleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(contractnumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(statusTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        maintenancedatePanel.setLayout(new java.awt.CardLayout());

        quartersPanel.setBackground(new java.awt.Color(255, 255, 255));
        quartersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Maintenance Dates", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 204))); // NOI18N

        jLabel7.setText("Q1:");

        q1DatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q1DatePickerActionPerformed(evt);
            }
        });

        q1dateTxt.setEditable(false);

        jLabel8.setText("Q3:");

        q3DatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q3DatePickerActionPerformed(evt);
            }
        });

        q3dateTxt.setEditable(false);

        jLabel9.setText("Q4:");

        q4dateTxt.setEditable(false);

        q4DatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q4DatePickerActionPerformed(evt);
            }
        });

        q2dateTxt.setEditable(false);

        q2DatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q2DatePickerActionPerformed(evt);
            }
        });

        jLabel10.setText("Q2:");

        javax.swing.GroupLayout quartersPanelLayout = new javax.swing.GroupLayout(quartersPanel);
        quartersPanel.setLayout(quartersPanelLayout);
        quartersPanelLayout.setHorizontalGroup(
            quartersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quartersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(quartersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(quartersPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q1DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q1dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q2DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q2dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(quartersPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q3DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q3dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q4DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q4dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        quartersPanelLayout.setVerticalGroup(
            quartersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quartersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(quartersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(q1DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q1dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(q2DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q2dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(quartersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(q3DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q3dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(q4DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q4dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        maintenancedatePanel.add(quartersPanel, "card2");

        semisPanel.setBackground(new java.awt.Color(255, 255, 255));
        semisPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Maintenance Dates", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 204))); // NOI18N

        jLabel11.setText("FIRST HALF DATE:");

        jLabel12.setText("SECOND HALF DATE:");

        secondhalfDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondhalfDatePickerActionPerformed(evt);
            }
        });

        secondhalfdateTxt.setEditable(false);
        secondhalfdateTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        secondhalfdateTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        firsthalfdateTxt.setEditable(false);
        firsthalfdateTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        firsthalfdateTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        firsthalfDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firsthalfDatePickerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout semisPanelLayout = new javax.swing.GroupLayout(semisPanel);
        semisPanel.setLayout(semisPanelLayout);
        semisPanelLayout.setHorizontalGroup(
            semisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semisPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(semisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(semisPanelLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(secondhalfDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(secondhalfdateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(semisPanelLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(firsthalfDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(firsthalfdateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        semisPanelLayout.setVerticalGroup(
            semisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semisPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(semisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(firsthalfdateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firsthalfDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(semisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(secondhalfDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondhalfdateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        maintenancedatePanel.add(semisPanel, "card3");

        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DELETE");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(448, 448, 448)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(678, Short.MAX_VALUE)
                    .addComponent(maintenancedatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(184, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(37, 37, 37)
                        .addComponent(jButton2)
                        .addGap(32, 32, 32)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(maintenancedatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout maintenancelistPanelLayout = new javax.swing.GroupLayout(maintenancelistPanel);
        maintenancelistPanel.setLayout(maintenancelistPanelLayout);
        maintenancelistPanelLayout.setHorizontalGroup(
            maintenancelistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(maintenancelistPanelLayout.createSequentialGroup()
                .addGroup(maintenancelistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(maintenancelistPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        maintenancelistPanelLayout.setVerticalGroup(
            maintenancelistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, maintenancelistPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1316, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(maintenancelistPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 612, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(maintenancelistPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        client=""+jComboBox1.getSelectedItem();
        getContracts();
    }//GEN-LAST:event_jComboBox1ActionPerformed
 public void getContracts(){
     try {
            String getcontractsql="SELECT CLIENTS.CLIENTNAME,CONTRACTS.CONTRACT_NO, CONTRACTS.CONT_DESCRIP,CONTRACTS.CLIENT_NO FROM CLIENTS " +
" LEFT JOIN CONTRACTS ON CLIENTS.CLIENT_NO=CONTRACTS.CLIENT_NO WHERE CLIENTS.CLIENT_NO=(SELECT CLIENT_NO FROM CLIENTS WHERE " +
"                   CLIENTNAME='"+client+"') ORDER BY CLIENTS.CLIENTNAME ASC";
            Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
            PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getcontractsql);
            ResultSet rst=pst.executeQuery(); int i=0;
            descriptioncomboModel.removeAllElements();
           descriptioncomboModel.addElement("-Select Contract-"); 
           
            while(rst.next()){
    descriptioncomboModel.addElement(rst.getString(3)); 
    clientNo=rst.getString(4);
    //contractcomboModel1.addElement(rst.getString(1)); 
             i++;  
            }
        } catch (SQLException ex) {
            Logger.getLogger(Calls.class.getName()).log(Level.SEVERE, null, ex);
        }
   } 
 
 public void getContractlist(){
     try {
         String  getcontractsql="SELECT CLIENTS.CLIENTNAME,CONTRACTS.CONTRACT_NO,CONTRACTS.CONT_DESCRIP,MAINTENANCELIST.Q1PM,MAINTENANCELIST.Q2PM,"
                 + "MAINTENANCELIST.Q3PM, MAINTENANCELIST.Q4PM, "
                 + "CONTRACTS.PM_SCHEDULE, CONTRACTS.BILL_SCHEDULE FROM CONTRACTS"
                 + " LEFT JOIN CLIENTS ON CONTRACTS.CLIENT_NO=CLIENTS.CLIENT_NO "
                 + "LEFT JOIN MAINTENANCELIST ON CONTRACTS.CONTRACT_NO=MAINTENANCELIST.CONTRACT_NO where CONTRACTS.PM_SCHEDULE !='N/A' "
                 + "ORDER BY CLIENTS.CLIENTNAME ASC";
         Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
         PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getcontractsql);
         ResultSet rst=pst.executeQuery(); int i=0;
  int h=maintenanceTable.getRowCount();
for(int k=0;k<h;k++){
maintenancetableModel.removeRow(0); 
}
   while(rst.next()){
  dbq1=rst.getString(4);  dbq2=rst.getString(5);  dbq3=rst.getString(6); dbq4  =rst.getString(7);   
  if(dbq1!=null&&!"N/A".equals(dbq1)){
  dbq1=sdf.format(new java.sql.Date(Date.valueOf(dbq1).getTime())); 
  }
  if(dbq2!=null&&!"N/A".equals(dbq2)){
  dbq2=sdf.format(new java.sql.Date(Date.valueOf(dbq2).getTime())); 
  }  
   if(dbq3!=null&&!"N/A".equals(dbq3)){
  dbq3=sdf.format(new java.sql.Date(Date.valueOf(dbq3).getTime())); 
  }
    if(dbq4!=null&&!"N/A".equals(dbq4)){
  dbq4=sdf.format(new java.sql.Date(Date.valueOf(dbq4).getTime())); 
  }

 maintenancetableModel.addRow(new Object[]{i+1,rst.getString(1),rst.getString(2),rst.getString(3),dbq1,dbq2,dbq3,dbq4,rst.getString(8),rst.getString(9)}); 
        i++; 
   }        
     } catch (SQLException ex) {
         Logger.getLogger(Maintenancelist.class.getName()).log(Level.SEVERE, null, ex);
     }
 }
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        descrip=""+jComboBox2.getSelectedItem();
        java.util.Date today1=Date.valueOf(LocalDate.now());
        java.sql.Date today= new java.sql.Date(today1.getTime()); 
        try {
            String getcontractsql="SELECT CONTRACTS.CONTRACT_NO, CONTRACTS.CONT_DESCRIP,contracts.PM_SCHEDULE,"
                    + "CONTRACTS.BILL_SCHEDULE,CONTRACTS.END,MAINTENANCELIST.Q1PM,MAINTENANCELIST.Q2PM,MAINTENANCELIST.Q3PM,"
                    + "MAINTENANCELIST.Q4PM FROM CONTRACTS "
            + "LEFT JOIN CLIENTS ON CONTRACTS.CLIENT_NO = CLIENTS.CLIENT_NO "
                    + "LEFT JOIN MAINTENANCELIST ON CONTRACTS.CONTRACT_NO=MAINTENANCELIST.CONTRACT_NO "
                    + "WHERE CONTRACTS.CONT_DESCRIP ='"+descrip+"' AND "
            + " CLIENTS.CLIENTNAME='"+client+"'";
      Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
            PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getcontractsql);
            ResultSet rst=pst.executeQuery(); int i=0;
            while(rst.next()){
                contractnumTxt.setText(rst.getString(1));
              pmscheduleTxt.setText(rst.getString(3)); 
              billscheduleTxt.setText(rst.getString(4));
                updq1=rst.getString(6);
          updq2=rst.getString(7); 
            updq3=rst.getString(8);
          updq4=rst.getString(9); 
              if(today.after( rst.getDate(5))){
              statusTxt.setText("EXPIRED");
              }else{
                statusTxt.setText("ACTIVE");
              }
            if(rst.getString(3).equalsIgnoreCase("SEMI-ANNUALLY")){
            maintenancedatePanel.removeAll();
            maintenancedatePanel.repaint();
            maintenancedatePanel.revalidate();
            maintenancedatePanel.add(semisPanel);
         System.out.println("first half   "+updq1);   System.out.println("2nd half  "+updq3); 
          firsthalfdateTxt.setText(sdf.format( java.sql.Date.valueOf((updq1)))); 
          secondhalfdateTxt.setText(sdf.format( java.sql.Date.valueOf((updq3))));  
        
        }else{
          maintenancedatePanel.removeAll();
            maintenancedatePanel.repaint();
            maintenancedatePanel.revalidate();
            maintenancedatePanel.add(quartersPanel);  
              System.out.println("q1  "+updq1);   System.out.println("q2 "+updq2); 
                System.out.println("q3   "+updq1);   System.out.println("q4 "+updq4); 
            q1dateTxt.setText(sdf.format(java.sql.Date.valueOf((updq1))));  
            q2dateTxt.setText(sdf.format(  java.sql.Date.valueOf((updq2))));
            q3dateTxt.setText(sdf.format(  java.sql.Date.valueOf((updq3))));
            q4dateTxt.setText(sdf.format(  java.sql.Date.valueOf((updq4)))); 
            } 
              
              i++;
            }
            connectDb.close();  }
        catch (SQLException ex) {
            Logger.getLogger(Calls.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed
public void getClients(){
        try {
            String getcontractsql="SELECT CLIENTS.CLIENTNAME,CONTRACTS.CONTRACT_NO,contracts.END FROM CLIENTS LEFT JOIN CONTRACTS ON "
                    + "CLIENTS.CLIENT_NO=CONTRACTS.CLIENT_NO WHERE CONTRACTS.PM_SCHEDULE !='N/A' ORDER BY CLIENTS.CLIENTNAME ASC";
            Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
            PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getcontractsql);
            ResultSet rst=pst.executeQuery(); int i=0;
            clientnameComboModel.removeAllElements();
              clientnameComboModel.addElement("--Select Client--"); 
              
             java.sql.Date todayDate=  java.sql.Date.valueOf(LocalDate.now()); 
             System.out.println("Today is :"+todayDate);
             while(rst.next()){
                 
     if(rst.getDate(3).after(todayDate)){
     clientnameComboModel.addElement(rst.getString(1));
     }         
        
      //  clientcomboModel1.addElement(rst.getString(1)); 
                i++;  
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(Calls.class.getName()).log(Level.SEVERE, null, ex);
        }
}  
    private void q1DatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q1DatePickerActionPerformed
   updq1=String.valueOf(q1date);  if(q2date!=null||q3date!=null||q4date!=null){
      if(q1date.before(q2date)||q1date.before(q3date)||q1date.before(q4date)){
    JOptionPane.showMessageDialog(this, "Q1 Date is not correct!", "Invalid Q1 Date", JOptionPane.ERROR_MESSAGE); 
    }
      else{
        q1date=new java.sql.Date(q1DatePicker.getDate().getTime());
  q1dateTxt.setText(sdf.format(q1date));
  updq1=String.valueOf(q1date);
      }
   }else{
        
        q1date=new java.sql.Date(q1DatePicker.getDate().getTime());
  q1dateTxt.setText(sdf.format(q1date));  updq1=String.valueOf(q1date);
   }
    }//GEN-LAST:event_q1DatePickerActionPerformed

    private void q2DatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q2DatePickerActionPerformed
    updq2=String.valueOf(q2date);
        if(q1date!=null) {   
        q2date=new java.sql.Date(q2DatePicker.getDate().getTime());
  if(q1date.after(q2date)){
  JOptionPane.showMessageDialog(this, "Please select a valid Q2 Date!", "Invalid Q2 Date", JOptionPane.ERROR_MESSAGE);
 q2date=null;  q2dateTxt.setText(null);
  }else{
  q2dateTxt.setText(sdf.format(q2date));  updq2=String.valueOf(q2date);
  }
      }
    else{
   JOptionPane.showMessageDialog(this, "Please select Q1 Date!", "Q1 Date Required", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_q2DatePickerActionPerformed

    private void q3DatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q3DatePickerActionPerformed
    if(q2date!=null) { 
        q3date=new java.sql.Date(q3DatePicker.getDate().getTime());   updq3=String.valueOf(q3date);
        if(q2date.after(q3date)){
  JOptionPane.showMessageDialog(this, "Please select a valid Q3 Date!", "Invalid Q3 Date", JOptionPane.ERROR_MESSAGE);
 q3date=null; q3dateTxt.setText(null);
        }else{
  q3dateTxt.setText(sdf.format(q3date));updq3=String.valueOf(q3date);
  }
    } else{
   JOptionPane.showMessageDialog(this, "Please select Q2 Date!", "Q2 Date Required", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_q3DatePickerActionPerformed

    private void q4DatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q4DatePickerActionPerformed
    if(q3date!=null) {   
        q4date=new java.sql.Date(q4DatePicker.getDate().getTime());
  updq4=String.valueOf(q4date);
       if(q3date.after(q4date)){
  JOptionPane.showMessageDialog(this, "Please select a valid Q4 Date!", "Invalid Q4 Date", JOptionPane.ERROR_MESSAGE);
  q4date=null; q4dateTxt.setText(null);
  }else{
  q4dateTxt.setText(sdf.format(q4date)); updq4=String.valueOf(q4date);
  }
    }
  else{
   JOptionPane.showMessageDialog(this, "Please select Q3 Date!", "Q2 Date Required", JOptionPane.ERROR_MESSAGE);
    }  
    }//GEN-LAST:event_q4DatePickerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   if(client==null){
   JOptionPane.showMessageDialog(null,"Please select client!","Client Required",JOptionPane.WARNING_MESSAGE);
   }
   else if(contractnumTxt.getText().isEmpty()){
    JOptionPane.showMessageDialog(null,"Please select contract!","Contract Required",JOptionPane.WARNING_MESSAGE);
   }
   else if(pmscheduleTxt.getText().equalsIgnoreCase("SEMI-ANNUALLY")){
  if(firsthalfdate==null&&secondhalfdate==null){
    JOptionPane.showMessageDialog(null,"Please select at least one  service half date !","Service Half Date Required",JOptionPane.WARNING_MESSAGE);
  }
  else if(firsthalfdate==null){
   JOptionPane.showMessageDialog(null,"First Half service date cannot be empty!","First Half Date Required",JOptionPane.WARNING_MESSAGE);
  }else{
  registerServicelist();
  }
   }
   else{
   if(q1date==null&&q2date==null&&q3date==null&&q4date==null){
    JOptionPane.showMessageDialog(null,"Please select at least one service quarter date !","Service Quarter Date Required",JOptionPane.WARNING_MESSAGE);
   }
   else if(q1date==null){
    JOptionPane.showMessageDialog(null,"Q1 service date cannot be empty!","Q1 Date Required",JOptionPane.WARNING_MESSAGE);
   }else{
     registerServicelist();
   } 
   }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void firsthalfDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firsthalfDatePickerActionPerformed
      firsthalfdate= new java.sql.Date(firsthalfDatePicker.getDate().getTime());
   if(secondhalfdate!=null&&firsthalfdate.after(secondhalfdate))  {
     JOptionPane.showMessageDialog(null, "Please select a valid Second Half Date!","Invalid Second Half Date",JOptionPane.ERROR_MESSAGE);
  firsthalfdate=null; 
   }  else{
    firsthalfdateTxt.setText(sdf.format(firsthalfdate)); 
      }
    }//GEN-LAST:event_firsthalfDatePickerActionPerformed
public void registerServicelist(){
   try {
           String checkqdate="SELECT Q1PM,Q2PM,Q3PM,Q4PM FROM MAINTENANCELIST WHERE CONTRACT_NO='"+contractnumTxt.getText()+"'";
           Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
           PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(checkqdate);
           ResultSet rst=pst.executeQuery(); int i=0;
           while(rst.next()){
           i++;
           }
       if(i<1){
  int year=LocalDate.now().getYear();
 int choice=JOptionPane.showConfirmDialog(null, "Do you want to save "+year+" Maintenance schedule for "+client+" contract no. "+contractnumTxt.getText()+"?","Confirm",JOptionPane.YES_NO_OPTION);
   if(choice==JOptionPane.YES_OPTION){
 
String insertsql="INSERT INTO MAINTENANCELIST VALUES(?,?,?,?,?)";   
  PreparedStatement pst2=(PreparedStatement)connectDb.prepareStatement(insertsql);
  pst2.setString(1, contractnumTxt.getText());
if(pmscheduleTxt.getText().equalsIgnoreCase("SEMI-ANNUALLY")){
   pst2.setDate(2, firsthalfdate); 
    pst2.setString(3, "N/A"); 
      pst2.setDate(4, secondhalfdate); 
        pst2.setString(5, "N/A"); 
}else{
 pst2.setDate(2, q1date); 
      pst2.setDate(3, q2date); 
         pst2.setDate(4, q3date); 
            pst2.setDate(5, q4date);
}
   
            int g=pst2.executeUpdate();
  if(g>0){
getContractlist();
  JOptionPane.showMessageDialog(null, year+" Preventive Maintenance schedule for "+client+" saved successfully!","Successful",JOptionPane.INFORMATION_MESSAGE);
  }          
   }
       } 
       else{
  JOptionPane.showMessageDialog(null, " Preventive Maintenance schedule for "+client+" contract no.  "+contractnumTxt.getText()+" already exists!","PM Schedule Exists",JOptionPane.WARNING_MESSAGE);      
       }     
       } catch (SQLException ex) {
           Logger.getLogger(Maintenancelist.class.getName()).log(Level.SEVERE, null, ex);
       }
}
    private void secondhalfDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondhalfDatePickerActionPerformed
      secondhalfdate= new java.sql.Date(secondhalfDatePicker.getDate().getTime());   
      if(secondhalfdate.before(firsthalfdate)){
      JOptionPane.showMessageDialog(null, "Please select a valid Second Half Date!","Invalid Second Half Date",JOptionPane.ERROR_MESSAGE);
    secondhalfdate=null;
      }
      else{
      secondhalfdateTxt.setText(sdf.format(secondhalfdate)); 
      }
    }//GEN-LAST:event_secondhalfDatePickerActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    if(contractnumTxt.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,"Please select client and contract!","Client and Contract Required",JOptionPane.WARNING_MESSAGE);
    } 
    else{
        try {
         String checkqdate="SELECT Q1PM,Q2PM,Q3PM,Q4PM FROM MAINTENANCELIST WHERE CONTRACT_NO='"+contractnumTxt.getText()+"'";
         Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
         PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(checkqdate);
         ResultSet rst=pst.executeQuery(); int i=0;
         int year=LocalDate.now().getYear();
         while(rst.next()){
             i++;
         }
         
  if(i<1){
  JOptionPane.showMessageDialog(null, year+ "Maintenance schedule for "+client+" contract no "+contractnumTxt.getText()+" does NOT exist!","Schedule not Found",JOptionPane.WARNING_MESSAGE);
  }else{
 int choice=JOptionPane.showConfirmDialog(this, "Do you want to save changes to "+client+" contract no "+contractnumTxt.getText()+" maintenance schedule?" );
 if(choice==JOptionPane.YES_OPTION){
 String updatesql;  PreparedStatement pst2=null;int b=0; 
 
 if(pmscheduleTxt.getText().equalsIgnoreCase("SEMI-ANNUALLY")){
  
 updatesql="UPDATE MAINTENANCELIST SET Q1PM=?,Q3PM=? WHERE CONTRACT_NO='"+contractnumTxt.getText()+"'";
 pst2=(PreparedStatement)connectDb.prepareStatement(updatesql);
  pst2.setString(1, updq1); 
    pst2.setString(3, updq3); 
  }
 else{
   updatesql="UPDATE MAINTENANCELIST SET Q1PM=?,Q2PM=?,Q3PM=? ,Q4PM=? WHERE CONTRACT_NO='"+contractnumTxt.getText()+"'";
  pst2=(PreparedStatement)connectDb.prepareStatement(updatesql);
  pst2.setString(1, updq1); 
   pst2.setString(2, updq2); 
    pst2.setString(3, updq3); 
    pst2.setString(4, updq4);  
    b= pst2.executeUpdate();
  }
 if(b>0){
 JOptionPane.showMessageDialog(null, "Changes for "+client+" contract no "+contractnumTxt.getText()+" saved successfully!","Update Successful",JOptionPane.INFORMATION_MESSAGE);
 }
 } }       
     } catch (SQLException ex) {
         Logger.getLogger(Maintenancelist.class.getName()).log(Level.SEVERE, null, ex);
     }
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Maintenancelist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Maintenancelist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Maintenancelist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Maintenancelist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Maintenancelist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField billscheduleTxt;
    private javax.swing.JTextField contractnumTxt;
    private org.jdesktop.swingx.JXDatePicker firsthalfDatePicker;
    private javax.swing.JTextField firsthalfdateTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable maintenanceTable;
    private javax.swing.JPanel maintenancedatePanel;
    public javax.swing.JPanel maintenancelistPanel;
    private javax.swing.JTextField pmscheduleTxt;
    private org.jdesktop.swingx.JXDatePicker q1DatePicker;
    private javax.swing.JTextField q1dateTxt;
    private org.jdesktop.swingx.JXDatePicker q2DatePicker;
    private javax.swing.JTextField q2dateTxt;
    private org.jdesktop.swingx.JXDatePicker q3DatePicker;
    private javax.swing.JTextField q3dateTxt;
    private org.jdesktop.swingx.JXDatePicker q4DatePicker;
    private javax.swing.JTextField q4dateTxt;
    private javax.swing.JPanel quartersPanel;
    private org.jdesktop.swingx.JXDatePicker secondhalfDatePicker;
    private javax.swing.JTextField secondhalfdateTxt;
    private javax.swing.JPanel semisPanel;
    private javax.swing.JTextField statusTxt;
    // End of variables declaration//GEN-END:variables
}
