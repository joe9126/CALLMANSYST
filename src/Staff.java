
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JOE
 */
public class Staff extends javax.swing.JFrame {
 JFileChooser jFileChooser=new JFileChooser();  
 String filename; Home access=new Home();
 String staffemail="na";
      int choice2; int nextcounter=0;int previouscounter; File f;
      String phoneno;
     String[] cols={"No.","STAFF NO","NAME","PHONE","DEPARTMENT","POSTN.","LEVEL","EMAIL"};
   DefaultTableModel   stafftableModel=new DefaultTableModel(cols,0){
   @Override
   public boolean isCellEditable(int row,int column){
        return column == 0;
   }  };
    /**
     * Creates new form Staff
     */
    public Staff() {
        initComponents();
         staffsTable.getTableHeader().setReorderingAllowed(false);
         staffsTable.getColumnModel().getColumn(0).setPreferredWidth(1);
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        staffPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        staffnoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        staffnameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        departTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        postTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        logoLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        stafflevelTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        phoneTxt = new javax.swing.JTextField();
        phoneTxt1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        emailTxt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staffsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        staffPanel.setBackground(new java.awt.Color(102, 0, 102));
        staffPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "STAFF RECORDS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "STAFF DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 0, 102))); // NOI18N

        jLabel1.setText("STAFF NO: ");

        staffnoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffnoTxtActionPerformed(evt);
            }
        });
        staffnoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                staffnoTxtKeyReleased(evt);
            }
        });

        jLabel2.setText("NAME:");

        jLabel3.setText("DEPART:");

        jLabel4.setText("POST:");

        jLabel5.setText("PASSPORT:");

        jButton1.setText("BROWSE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/newmember.JPG"))); // NOI18N

        jButton2.setText("SAVE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        stafflevelTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stafflevelTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stafflevelTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stafflevelTxtKeyTyped(evt);
            }
        });

        jLabel6.setText("LEVEL");

        jLabel7.setText("PHONE NO:");

        phoneTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        phoneTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phoneTxtKeyTyped(evt);
            }
        });

        phoneTxt1.setEditable(false);
        phoneTxt1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        phoneTxt1.setText("254");
        phoneTxt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phoneTxt1KeyTyped(evt);
            }
        });

        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setText("EMAIL:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(53, 53, 53))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(55, 55, 55)
                        .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(departTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(28, 28, 28)
                            .addComponent(phoneTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(phoneTxt))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(28, 28, 28)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(staffnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(staffnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6)
                                .addComponent(jLabel8))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1)
                                .addComponent(stafflevelTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                .addComponent(postTxt)
                                .addComponent(emailTxt)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(staffnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(staffnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(phoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(departTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(postTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(stafflevelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "STAFF RECORDS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 204))); // NOI18N

        staffsTable.setModel(stafftableModel);
        staffsTable.setFillsViewportHeight(true);
        staffsTable.setGridColor(new java.awt.Color(102, 0, 102));
        staffsTable.setRowHeight(25);
        staffsTable.setRowMargin(2);
        staffsTable.setSelectionBackground(new java.awt.Color(153, 0, 153));
        staffsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(staffsTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 869, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(936, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout staffPanelLayout = new javax.swing.GroupLayout(staffPanel);
        staffPanel.setLayout(staffPanelLayout);
        staffPanelLayout.setHorizontalGroup(
            staffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1276, Short.MAX_VALUE))
        );
        staffPanelLayout.setVerticalGroup(
            staffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(staffPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(staffPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void getStaffs(){
 int j=staffsTable.getRowCount();
 for(int f1=0;f1<j;f1++){
 stafftableModel.removeRow(0);
 }
    
    try {
          Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
          String checksql;
 if(!staffnoTxt.getText().isEmpty()){
 checksql="SELECT  STAFFNO, STAFFNAME,DEPT, POST,STAFFLEVEL,PASSPORT, PHONE, EMAIL FROM STAFF WHERE STAFFNO LIKE '"+ staffnoTxt.getText()+"%' ORDER BY STAFFNAME ASC"; 
 }  else{
  checksql="SELECT  STAFFNO, STAFFNAME,  DEPT, POST,STAFFLEVEL, PHONE, EMAIL FROM STAFF ORDER BY STAFFNAME ASC"; 
 }   
      PreparedStatement pst3=(PreparedStatement)connectDb.prepareStatement(checksql);
          ResultSet rst3=pst3.executeQuery(); int y3=0;
          while(rst3.next()){
  if(!staffnoTxt.getText().isEmpty())
  {           
     staffnameTxt.setText(rst3.getString(2));
     phoneTxt.setText(rst3.getString(7)); 
       phoneTxt1.setText(null); 
     departTxt.setText(rst3.getString(3));
     postTxt.setText(rst3.getString(4)); 
     emailTxt.setText(rst3.getString(8));
 byte[] ibytes =rst3.getBytes(5); 

Image imagelog = getToolkit().createImage(ibytes);
ImageIcon icon=new ImageIcon( imagelog.getScaledInstance(100, 100, Image.SCALE_DEFAULT));
   logoLabel.setIcon(icon);
   stafftableModel.addRow(new Object[]{y3+1,rst3.getString(1),rst3.getString(2),rst3.getString(7),rst3.getString(3),rst3.getString(4),rst3.getInt(5),rst3.getString(8)}); 
  }else{
  stafftableModel.addRow(new Object[]{y3+1,rst3.getString(1),rst3.getString(2),rst3.getString(6),rst3.getString(3),rst3.getString(4),rst3.getInt(5),rst3.getString(7)}); 
  }
       y3++; }
    if(y3<1){
     staffnameTxt.setText(null);
     phoneTxt.setText(null);
       phoneTxt1.setText(null);
     departTxt.setText(null);
     postTxt.setText(null); logoLabel.setIcon(null);
    }
    
    } catch (SQLException ex) {
            Logger.getLogger(Userprofile.class.getName()).log(Level.SEVERE, null, ex);
        }

}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
 f=jFileChooser.getSelectedFile();
 jFileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Image Files","jpg","png","tif")); 
   jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
  //FileFilter ff=new FileNameExtensionFilter("Images",ImageIO.getReaderFileSuffixes());
   
        
      //FileNameExtensionFilter filefilter2=new FileNameExtensionFilter("Image",".jpg",".png","PNG,JPG");
   
      //jFileChooser.setFileFilter(filefilter2);
choice2=jFileChooser.showOpenDialog(jFileChooser);

     if(choice2==JFileChooser.APPROVE_OPTION){
    filename=jFileChooser.getSelectedFile().getName();
              FileInputStream io = null;        
       try {
   
     Class.forName("com.mysql.jdbc.Driver");
   Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
     String sqllogo="INSERT INTO STAFFTEMP VALUES(?)";

       f=jFileChooser.getSelectedFile();
                                io = new FileInputStream(f);
                              com.mysql.jdbc.PreparedStatement stmt=(com.mysql.jdbc.PreparedStatement)connectDb.prepareStatement(sqllogo);
                             stmt.setBinaryStream(1, (InputStream)io,(int)f.length());
                               stmt.executeUpdate();
                              
  byte[] ibytes=null;                              
 String sqllogret="SELECT MEMBERPHOTO FROM STAFFTEMP "; 
 com.mysql.jdbc.PreparedStatement pstret=(com.mysql.jdbc.PreparedStatement)connectDb.prepareStatement(sqllogret);
 ResultSet stret=pstret.executeQuery();
 int k=0;
 if(stret!=null){
while(stret.next()){
 
// String logname=stret.getString(1);
ibytes =stret.getBytes(1);

Image imagelog = getToolkit().createImage(ibytes);
ImageIcon icon=new ImageIcon( imagelog.getScaledInstance(150, 150, Image.SCALE_DEFAULT));
    
 logoLabel.setIcon(icon);
 // MainWindow mw=new MainWindow();
 // mw.updateSchoolinfo();

} }
 }
                    catch (FileNotFoundException | ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(Settings.class.getName()).log(Level.SEVERE, null, ex);
                      //  JOptionPane.showMessageDialog(null, "Passport photo is larger than 100KB!","Image Too Large",JOptionPane.WARNING_MESSAGE);
                    } }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void staffsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffsTableMouseClicked
       int row=staffsTable.getSelectedRow();
       staffnoTxt.setText(String.valueOf(stafftableModel.getValueAt(row, 1))); 
       staffnameTxt.setText(String.valueOf(stafftableModel.getValueAt(row, 2))); 
       phoneTxt.setText(String.valueOf(stafftableModel.getValueAt(row, 3))); 
       departTxt.setText(String.valueOf(stafftableModel.getValueAt(row, 4))); 
       postTxt.setText(String.valueOf(stafftableModel.getValueAt(row, 5))); 
       stafflevelTxt.setText(String.valueOf(stafftableModel.getValueAt(row, 6))); 
       emailTxt.setText(String.valueOf(stafftableModel.getValueAt(row, 7))); 
       try {
          Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
          String checksql;
  checksql="SELECT PASSPORT FROM STAFF WHERE STAFFNO='"+staffnoTxt.getText()+"'"; 
      PreparedStatement pst3=(PreparedStatement)connectDb.prepareStatement(checksql);
          ResultSet rst3=pst3.executeQuery(); int y3=0;
          while(rst3.next()){
 byte[] ibytes =rst3.getBytes(1); 
Image imagelog = getToolkit().createImage(ibytes);
ImageIcon icon=new ImageIcon( imagelog.getScaledInstance(150,150, Image.SCALE_DEFAULT));
   logoLabel.setIcon(icon);
 y3++; 
          }
       } catch (SQLException ex) {
            Logger.getLogger(Userprofile.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_staffsTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     if(staffnoTxt.getText().isEmpty()){
     JOptionPane.showMessageDialog(null, "Please enter staff number!", "Staff Number Required", JOptionPane.WARNING_MESSAGE);
     }else  if(staffnameTxt.getText().isEmpty()){
     JOptionPane.showMessageDialog(null, "Please enter staff name!", "Staff Name Required", JOptionPane.WARNING_MESSAGE);
     }
     else  if(departTxt.getText().isEmpty()){
     JOptionPane.showMessageDialog(null, "Please enter department!", "Staff Department Required", JOptionPane.WARNING_MESSAGE);
     }
      else  if(postTxt.getText().isEmpty()){
     JOptionPane.showMessageDialog(null, "Please enter position!", "Staff position Required", JOptionPane.WARNING_MESSAGE);
     }
     else  if(stafflevelTxt.getText().isEmpty()){
     JOptionPane.showMessageDialog(null, "Please enter staff level!", "Staff Level Required", JOptionPane.WARNING_MESSAGE);
     }  
      else  if(phoneTxt.getText().isEmpty()){
     JOptionPane.showMessageDialog(null, "Please enter phone number !", "Phone number Required", JOptionPane.WARNING_MESSAGE);
     } 
      else{
     if(!emailTxt.getText().isEmpty()){
     staffemail=emailTxt.getText();
     } 
     try {
         Class.forName("com.mysql.jdbc.Driver");
         Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
         String sqllogo="SELECT * FROM STAFF WHERE STAFFNO='"+staffnoTxt.getText()+"'";
         com.mysql.jdbc.PreparedStatement pstret=(com.mysql.jdbc.PreparedStatement)connectDb.prepareStatement(sqllogo);
 ResultSet stret=pstret.executeQuery();
 int k=0;
 if(stret!=null){
while(stret.next()){
 k++;
}
if(k>0){
     int choice=JOptionPane.showConfirmDialog(this,"Do you want to update "+staffnameTxt.getText()+" details ?","Confirm", JOptionPane.YES_NO_OPTION);
   if(choice==JOptionPane.YES_OPTION){
        String updatesql; int p=0;
  if(f==null){
 updatesql="UPDATE STAFF SET STAFFNAME=?,PHONE=?,DEPT=?,POST=?, STAFFLEVEL=?,EMAIL=?  WHERE STAFFNO='"+ staffnoTxt.getText()+"'"; 
  PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(updatesql);
    pst.setString(1, staffnameTxt.getText()); 
     pst.setString(2, phoneTxt1.getText()+""+phoneTxt.getText()); 
          pst.setString(3, departTxt.getText());
          pst.setString(4, postTxt.getText().toUpperCase());
          pst.setInt(5, Integer.parseInt(stafflevelTxt.getText()));  
          pst.setString(6, staffemail);
         p= pst.executeUpdate();
  }else{
  updatesql="UPDATE STAFF SET STAFFNAME=?,PHONE=?,DEPT=?,POST=?,STAFFLEVEL=?,PASSPORT=?,EMAIL=? WHERE STAFFNO='"+ staffnoTxt.getText()+"'"; 
   PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(updatesql);
 pst.setString(1, staffnameTxt.getText()); 
   pst.setString(2, phoneTxt1.getText()+""+phoneTxt.getText()); 
          pst.setString(3, departTxt.getText());
          pst.setString(4, postTxt.getText().toUpperCase());
     pst.setInt(5, Integer.parseInt(stafflevelTxt.getText()));  
      FileInputStream     io2 = new FileInputStream(f);
  pst.setBinaryStream(6, (InputStream)io2,(int)f.length());
   pst.setString(7, staffemail);
 p= pst.executeUpdate();
  }     
  if(p>0){
      getStaffs();
  JOptionPane.showMessageDialog(null, staffnameTxt.getText()+ " Details updated successfully!","Update Successful",JOptionPane.INFORMATION_MESSAGE);
 staffnoTxt.setText(null); staffnameTxt.setText(null); phoneTxt.setText(null); phoneTxt1.setText(null);
 departTxt.setText(null); stafflevelTxt .setText(null); getStaffs();emailTxt.setText(null);
  }
  }

}
else{
 int choice=JOptionPane.showConfirmDialog(this,"Do you want to save "+staffnameTxt.getText()+" as new staff  number ?","Confirm", JOptionPane.YES_NO_OPTION);
               if(choice==JOptionPane.YES_OPTION){
 String newmembersql="INSERT INTO STAFF  VALUES (?,?,?,?,?,?,?,?)";
 PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(newmembersql);
   pst.setString(1, staffnoTxt.getText()); 
     pst.setString(2, staffnameTxt.getText()); 
      pst.setString(3, phoneTxt1.getText()+""+phoneTxt.getText()); 
           pst.setString(4, departTxt.getText());
          pst.setString(5, postTxt.getText().toUpperCase());
      pst.setInt(6, Integer.parseInt(stafflevelTxt.getText()));  
         FileInputStream io = null;     
   FileInputStream io2 = null;    

 byte[] ibytes=null;        int p=0;                      
 String sqllogret="SELECT MEMBERPHOTO FROM STAFFTEMP "; 
 com.mysql.jdbc.PreparedStatement pstret2=(com.mysql.jdbc.PreparedStatement)connectDb.prepareStatement(sqllogret);
 ResultSet stret2=pstret2.executeQuery();
while(stret2.next()){
ibytes =stret2.getBytes(1);
}
if(f==null){
 pst.setBytes(7, ibytes);
}else{
 io2 = new FileInputStream(f);
  pst.setBinaryStream(7, (InputStream)io2,(int)f.length());
}
pst.setString(8, staffemail);
p=pst.executeUpdate();

if(p>0){
       getStaffs();
JOptionPane.showMessageDialog(null, staffnameTxt.getText()+" Details saved successfully!","  Successful",JOptionPane.INFORMATION_MESSAGE);
  }
}
}
 }      
     } catch (ClassNotFoundException | SQLException ex) {
         Logger.getLogger(Settings.class.getName()).log(Level.SEVERE, null, ex);
     }   catch (FileNotFoundException ex) {
             Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
         }
      }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void staffnoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffnoTxtActionPerformed
    
    }//GEN-LAST:event_staffnoTxtActionPerformed

    private void staffnoTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_staffnoTxtKeyReleased
    getStaffs();
    }//GEN-LAST:event_staffnoTxtKeyReleased

    private void stafflevelTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stafflevelTxtKeyTyped
       char c=evt.getKeyChar();
        if(!((c>='0')&&(c<='9') )){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_stafflevelTxtKeyTyped

    private void phoneTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneTxtKeyTyped
        char c=evt.getKeyChar();
        if(!((c>='0')&&(c<='9') )){
            getToolkit().beep();
            evt.consume();
        }
        
    /* if(phoneTxt.getText().trim().length()!=9){
      JOptionPane.showMessageDialog(null, "Please enter a valid phone number!","Invalid Phone",JOptionPane.WARNING_MESSAGE);
      } */
    }//GEN-LAST:event_phoneTxtKeyTyped

    private void phoneTxt1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneTxt1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTxt1KeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      if(staffnoTxt.getText().isEmpty()){
      JOptionPane.showMessageDialog(null, "Please enter staff number!","Staff Number Required",JOptionPane.WARNING_MESSAGE);
      }else{
          try {
              Class.forName("com.mysql.jdbc.Driver");
              Connection connectDb=(Connection)DriverManager.getConnection(access.server, access.username,access.dbpword);
      String sqllogo="SELECT * FROM STAFF WHERE STAFFNO='"+staffnoTxt.getText()+"'";
              com.mysql.jdbc.PreparedStatement pstret=(com.mysql.jdbc.PreparedStatement)connectDb.prepareStatement(sqllogo);
              ResultSet stret=pstret.executeQuery(); int y=0;
     while(stret.next()){
     y++;
     }         
   if(y<1){
   JOptionPane.showMessageDialog(null, "Staff Number "+staffnoTxt.getText()+" does not exist!","Invalid Staff Number",JOptionPane.ERROR_MESSAGE);
   } else{
   int choice=JOptionPane.showConfirmDialog(null, "Do you want to delete "+staffnameTxt.getText()+" from staff records?","Confirm",JOptionPane.YES_NO_OPTION);
   if(choice==JOptionPane.YES_OPTION){
   String deletesql="DELETE FROM STAFF WHERE STAFFNO='"+staffnoTxt.getText()+"'";
    com.mysql.jdbc.PreparedStatement pstret2=(com.mysql.jdbc.PreparedStatement)connectDb.prepareStatement(deletesql);
 int g=   pstret2.executeUpdate();
 
 if(g>0){
    JOptionPane.showMessageDialog(null, " "+staffnameTxt.getText()+" deleted successfully!","Succesful",JOptionPane.INFORMATION_MESSAGE);
 staffnoTxt.setText(null); staffnameTxt.setText(null); phoneTxt.setText(null); departTxt.setText(null);
 postTxt.setText(null); stafflevelTxt.setText(null); logoLabel.setIcon(null);   getStaffs(); 
  }
   }
   
   }      } catch (ClassNotFoundException | SQLException ex) {
              Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
          }
      
      }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField departTxt;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JTextField phoneTxt;
    private javax.swing.JTextField phoneTxt1;
    private javax.swing.JTextField postTxt;
    public javax.swing.JPanel staffPanel;
    private javax.swing.JTextField stafflevelTxt;
    private javax.swing.JTextField staffnameTxt;
    private javax.swing.JTextField staffnoTxt;
    private javax.swing.JTable staffsTable;
    // End of variables declaration//GEN-END:variables
}
