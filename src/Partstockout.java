
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JOE
 */
public class Partstockout extends javax.swing.JFrame {
Home access=new Home(); String currentuser; java.sql.Date datein;    
  SimpleDateFormat sdf=new SimpleDateFormat("dd MMM,yyyy");
   DefaultComboBoxModel collectedbycomboModel=new DefaultComboBoxModel();
   
  String[] cols1={"","NO","ENTRY ID","OWNER","REF No.","TICKET # IN","PART No.","DESCRIPT.","CURRENT QTY ","DATE OUT","SERVICE TICKET # ","QTY ISSUED","COLLECTED BY","ISSUED BY","USED AT"};
  
 DefaultTableModel  partstocktableModel =new DefaultTableModel(cols1,0) {
   @Override
   public boolean isCellEditable(int row,int column){
  return column == 0;
   }  }; 
 
  String[] cols={"","NO","REF No.","TICKET No.","PART No.","DESCRIPTION","QTY ISSUED ","SERVICE TICKET #"};
  DefaultTableModel partsouttableModel=new DefaultTableModel(cols,0){
   @Override
   public boolean isCellEditable(int row,int column){
        return column == 6||column == 0||column == 7;
   }  };
  String selectedpart,selectedclient,entryID,collectedby;

    public Partstockout() {
        initComponents();
         partsoutTable.getTableHeader().setReorderingAllowed(false);
 partsoutTable.getColumnModel().getColumn(0).setPreferredWidth(1);
  partsoutTable.getColumnModel().getColumn(1).setPreferredWidth(1);
 
   partstockTable.getTableHeader().setReorderingAllowed(false);
 partstockTable.getColumnModel().getColumn(0).setPreferredWidth(1);
  partstockTable.getColumnModel().getColumn(1).setPreferredWidth(1);
   partstockTable.getColumnModel().getColumn(2).setPreferredWidth(2);
    partstockTable.getColumnModel().getColumn(8).setPreferredWidth(1);
     partstockTable.getColumnModel().getColumn(11).setPreferredWidth(2);
  
   TableColumn tc2 =partstockTable.getColumnModel().getColumn(0);
     tc2.setCellEditor(partstockTable.getDefaultEditor(Boolean.class));
     tc2.setCellRenderer(partstockTable.getDefaultRenderer(Boolean.class));     
     
    TableColumn tc =partsoutTable.getColumnModel().getColumn(0);
     tc.setCellEditor(partsoutTable.getDefaultEditor(Boolean.class));
     tc.setCellRenderer(partsoutTable.getDefaultRenderer(Boolean.class)); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        partstockoutPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cleintnameTxt = new javax.swing.JTextField();
        cleintnoTxt = new javax.swing.JTextField();
        addressTxt = new javax.swing.JTextField();
        cityTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        dateinTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        partsinScroll = new javax.swing.JScrollPane();
        partsoutTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        collectedbyCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        issuedbyTxt = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        searchpartnoTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        partstockTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        partstockoutPanel.setBackground(new java.awt.Color(153, 0, 153));
        partstockoutPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PARTS STOCK OUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SERVICE CLIENT DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(204, 0, 204))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("CLIENT:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("CLIENT NO:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("PO BOX:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("CITY:");

        cleintnameTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cleintnameTxtMouseExited(evt);
            }
        });
        cleintnameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cleintnameTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cleintnameTxtKeyTyped(evt);
            }
        });

        cleintnoTxt.setEditable(false);
        cleintnoTxt.setText(" ");

        addressTxt.setEditable(false);
        addressTxt.setText(" ");

        cityTxt.setEditable(false);
        cityTxt.setText(" ");
        cityTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel18)
                            .addGap(59, 59, 59)
                            .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cleintnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addGap(37, 37, 37)
                            .addComponent(addressTxt))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(19, 19, 19)
                            .addComponent(cleintnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cleintnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cleintnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PART DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 204))); // NOI18N
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel4MouseEntered(evt);
            }
        });

        jLabel1.setText("DATE OUT:");

        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });

        dateinTxt.setEditable(false);

        jLabel2.setText("COLLECTED BY:");

        partsoutTable.setModel(partsouttableModel);
        partsoutTable.setCellSelectionEnabled(true);
        partsoutTable.setFillsViewportHeight(true);
        partsoutTable.setGridColor(new java.awt.Color(204, 0, 204));
        partsoutTable.setRowHeight(30);
        partsoutTable.setRowMargin(2);
        partsoutTable.setSelectionBackground(new java.awt.Color(204, 0, 204));
        partsoutTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                partsoutTableMouseClicked(evt);
            }
        });
        partsoutTable.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                partsoutTableInputMethodTextChanged(evt);
            }
        });
        partsoutTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                partsoutTableKeyPressed(evt);
            }
        });
        partsinScroll.setViewportView(partsoutTable);

        jButton1.setText("ISSUE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("PRINT");

        collectedbyCombo.setModel(collectedbycomboModel);
        collectedbyCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collectedbyComboActionPerformed(evt);
            }
        });

        jLabel3.setText("ISSUED BY:");

        issuedbyTxt.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(collectedbyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(issuedbyTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap())
            .addComponent(partsinScroll)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(collectedbyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(issuedbyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(partsinScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PARTS STOCK ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 153))); // NOI18N

        searchpartnoTxt.setForeground(new java.awt.Color(153, 153, 153));
        searchpartnoTxt.setText("SEARCH PART NUMBER");
        searchpartnoTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchpartnoTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchpartnoTxtMouseEntered(evt);
            }
        });
        searchpartnoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchpartnoTxtKeyTyped(evt);
            }
        });

        partstockTable.setModel(partstocktableModel);
        partstockTable.setFillsViewportHeight(true);
        partstockTable.setGridColor(new java.awt.Color(204, 0, 204));
        partstockTable.setRowHeight(25);
        partstockTable.setRowMargin(2);
        partstockTable.setSelectionBackground(new java.awt.Color(204, 0, 204));
        partstockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                partstockTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(partstockTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchpartnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1255, Short.MAX_VALUE)
                    .addGap(4, 4, 4)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(searchpartnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(346, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addGap(0, 23, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout partstockoutPanelLayout = new javax.swing.GroupLayout(partstockoutPanel);
        partstockoutPanel.setLayout(partstockoutPanelLayout);
        partstockoutPanelLayout.setHorizontalGroup(
            partstockoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        partstockoutPanelLayout.setVerticalGroup(
            partstockoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partstockoutPanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(partstockoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(partstockoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public void getTechnician(){
           try {
               String technsql="SELECT STAFFNO, STAFFNAME FROM STAFF ORDER BY STAFFNAME ASC";
               Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
               PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(technsql);
               ResultSet rst=pst.executeQuery(); int i=0;
               collectedbycomboModel.removeAllElements();
               collectedbycomboModel.addElement("--Select Technician--");
               while(rst.next()){
                   collectedbycomboModel.addElement(rst.getString(2));
                  //collectedby=rst.getString(1);
                   collectedby=rst.getString(2);
                   i++;
               }
               if(i<1){
               collectedby=null;
                 }
           } catch (SQLException ex) {
               Logger.getLogger(Calls.class.getName()).log(Level.SEVERE, null, ex);
           }
  
 }
    private void cleintnameTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cleintnameTxtMouseExited
        // cleintnameTxt.setText(clientsname);
    }//GEN-LAST:event_cleintnameTxtMouseExited

    private void cleintnameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cleintnameTxtKeyReleased

    }//GEN-LAST:event_cleintnameTxtKeyReleased

    private void cleintnameTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cleintnameTxtKeyTyped
        System.out.println("Client name typed "+cleintnameTxt.getText()); getClients();
    }//GEN-LAST:event_cleintnameTxtKeyTyped

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed
        datein=new java.sql.Date(jXDatePicker1.getDate().getTime());
        dateinTxt.setText(sdf.format(datein));
    }//GEN-LAST:event_jXDatePicker1ActionPerformed
  public void getClients(){
        try {
            String getcontractsql="SELECT CLIENTNAME,CLIENT_NO,POBOX,TOWN,CONT_PERSON,MOBILE, EMAIL FROM CLIENTS WHERE CLIENTNAME LIKE "
                    + " '"+ cleintnameTxt.getText()+"%' ORDER BY CLIENTNAME DESC";
          
        Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
            PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getcontractsql);
            ResultSet rst=pst.executeQuery(); int i=0;
        while(rst.next()){
    cleintnoTxt.setText(rst.getString(2));  addressTxt.setText(rst.getString(3)); 
     cityTxt.setText(rst.getString(4));   
                i++;  
            }if(i<1){
          cleintnoTxt.setText(null);  addressTxt.setText(null); 
     cityTxt.setText(null);   
      }
        }
        catch (SQLException ex) {
            Logger.getLogger(Calls.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    private void partsoutTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_partsoutTableMouseClicked
int r=partsoutTable.getSelectedRow();
int c=partsoutTable.getSelectedColumn();
 if(c==0){
        TableModel model1=partsoutTable.getModel(); String partno=null;
        String ticketno,refno; 
int choice=JOptionPane.showConfirmDialog(null, "Remove selected item?","Confirm",JOptionPane.YES_NO_OPTION);
  if(choice==JOptionPane.YES_OPTION){
    for(int i=0; i<model1.getRowCount();i++){
       if((Boolean) model1.getValueAt(i,0)){
partsouttableModel.removeRow(r); 
      }
     }
  }  
 }     
 else if(c==7){

 if(isNumeric(partsoutTable.getValueAt(r, 6).toString())){
 
 }else{
 JOptionPane.showMessageDialog(null, "Please enter a valid Quantity Out!","Invalid Quantity",JOptionPane.WARNING_MESSAGE);
 }
 

 }
    }//GEN-LAST:event_partsoutTableMouseClicked
 
    public String checkQty(String status){
  int dbqty=0;int r=partsoutTable.getSelectedRow();
int c=partsoutTable.getSelectedColumn();
     try {
         Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
String checkqtysql="SELECT QUANTITY FROM PARTSTOCK WHERE ENTRY_ID='"+partsoutTable.getValueAt(r, 1).toString()+"'";
   PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(checkqtysql);
  ResultSet rst=pst.executeQuery();   
  while(rst.next()){
 dbqty=rst.getInt(1);
  }
 if(Integer.parseInt(partsoutTable.getValueAt(r, 6).toString())>dbqty){
 JOptionPane.showMessageDialog(null, "Quantity to issue is higher than available stock quantity!","Invalid Quantity",JOptionPane.ERROR_MESSAGE);
 partsoutTable.setValueAt("", r, 6); status="failed";
 }else{
 status="pass";
 }
     } catch (SQLException ex) {
         Logger.getLogger(Partstockout.class.getName()).log(Level.SEVERE, null, ex);
     }
return status;
    }
    public void getStock(){
          try {
  Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
  String getstock=" SELECT PARTSTOCK.ENTRY_ID ,CLIENTS.CLIENTNAME,PARTSTOCK.CLIENT_NO, PARTSTOCK.REFNO,PARTSTOCK.TICKETNO,PARTSTOCK.PARTNO,PARTSTOCK.DESCRIPTION,PARTSTOCK.QUANTITY,"
          + "PARTSTOCKOUT.DATE_OUT,PARTSTOCKOUT.TICKETOUT,PARTSTOCKOUT.QTY_OUT,PARTSTOCKOUT.COLLECTEDBY,PARTSTOCKOUT.ISSUEDBY,"
          + "PARTSTOCKOUT.CLIENT "
          + "FROM PARTSTOCK LEFT JOIN CLIENTS ON PARTSTOCK.CLIENT_NO=CLIENTS.CLIENT_NO "
          + "LEFT JOIN PARTSTOCKOUT ON PARTSTOCK.ENTRY_ID=PARTSTOCKOUT.ENTRY_ID ORDER BY PARTSTOCKOUT.DATE_OUT DESC";
  
 if(!searchpartnoTxt.getText().isEmpty()&&!searchpartnoTxt.getText().equalsIgnoreCase("search part number")){
 getstock=" SELECT PARTSTOCK.ENTRY_ID ,CLIENTS.CLIENTNAME,PARTSTOCK.CLIENT_NO, PARTSTOCK.REFNO,PARTSTOCK.TICKETNO,PARTSTOCK.PARTNO,PARTSTOCK.DESCRIPTION,PARTSTOCK.QUANTITY,"
          + "PARTSTOCKOUT.DATE_OUT,PARTSTOCKOUT.TICKETOUT,PARTSTOCKOUT.QTY_OUT,PARTSTOCKOUT.COLLECTEDBY,PARTSTOCKOUT.ISSUEDBY,"
          + "PARTSTOCKOUT.CLIENT "
          + "FROM PARTSTOCK LEFT JOIN CLIENTS ON PARTSTOCK.CLIENT_NO=CLIENTS.CLIENT_NO "
          + "LEFT JOIN PARTSTOCKOUT ON PARTSTOCK.ENTRY_ID=PARTSTOCKOUT.ENTRY_ID  "
     + " where PARTSTOCK.PARTNO LIKE '"+searchpartnoTxt.getText()+"%' ORDER BY PARTSTOCKOUT.DATE_OUT DESC";
 } 
 else if(!cleintnameTxt.getText().isEmpty()){
 getstock=" SELECT PARTSTOCK.ENTRY_ID ,CLIENTS.CLIENTNAME,PARTSTOCK.CLIENT_NO, PARTSTOCK.REFNO,PARTSTOCK.TICKETNO,PARTSTOCK.PARTNO,PARTSTOCK.DESCRIPTION,PARTSTOCK.QUANTITY,"
          + "PARTSTOCKOUT.DATE_OUT,PARTSTOCKOUT.TICKETOUT,PARTSTOCKOUT.QTY_OUT,PARTSTOCKOUT.COLLECTEDBY,PARTSTOCKOUT.ISSUEDBY,"
          + "PARTSTOCKOUT.CLIENT "
          + "FROM PARTSTOCK LEFT JOIN CLIENTS ON PARTSTOCK.CLIENT_NO=CLIENTS.CLIENT_NO "
          + "LEFT JOIN PARTSTOCKOUT ON PARTSTOCK.ENTRY_ID=PARTSTOCKOUT.ENTRY_ID  "
     + " where PARTSTOCKOUT.CLIENT  LIKE '"+cleintnameTxt.getText()+"%' ORDER BY PARTSTOCKOUT.DATE_OUT DESC";
 }
 
  PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getstock);
  ResultSet rst=pst.executeQuery();
  int f=partstockTable.getRowCount(); int z=0;
  for(int x=0;x<f;x++){
  partstocktableModel.removeRow(0);
  }
  while(rst.next()){
   if(rst.getDate(9)==null){
    partstocktableModel.addRow(new Object[]{false,z+1,rst.getString(1),rst.getString(2),rst.getString(4),rst.getString(5),rst.getString(6),rst.getString(7),
  rst.getInt(8),"",rst.getString(10),rst.getInt(10),rst.getString(11),rst.getString(12),rst.getString(13)}); 
   } else{  
  partstocktableModel.addRow(new Object[]{false,z+1,rst.getString(1),rst.getString(2),rst.getString(4),rst.getString(5),rst.getString(6),rst.getString(7),
  rst.getInt(8),sdf.format(rst.getDate(9)),rst.getString(10),rst.getInt(11),rst.getString(12),rst.getString(13),rst.getString(14)}); 
}
  z++;  }
          } catch (SQLException ex) {
              Logger.getLogger(Partstock.class.getName()).log(Level.SEVERE, null, ex);
          }
 
 } 
    private void partsoutTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_partsoutTableKeyPressed
        if(evt.getKeyCode()==10){
            int rowindex=partsoutTable.getSelectedRow();
            int colindex=partsoutTable.getSelectedColumn();
            partsoutTable.editCellAt(rowindex+1, 2);
            evt.consume();
            //     studregTable.setColumnSelectionInterval(rowindex, colindex+1);
            if(vaidCheck())
            {
                int row=partsoutTable.getRowCount();
                int r=partsoutTable.getSelectedRow();

                String qty=(partsoutTable.getValueAt(rowindex,6).toString());
                if(isNumeric(qty)){

                    String partno=(partsoutTable.getValueAt(rowindex,4).toString());
                    for(int c=0;c<row-1;c++){
                        if(partno.equalsIgnoreCase(partsoutTable.getValueAt(c,4).toString())){
                            partsoutTable.setValueAt("", rowindex, 4);
                        }
                    }
// partsouttableModel.addRow(new Object[]{false,row+1,partsoutTable.getValueAt(r, 2),partsoutTable.getValueAt(r, 3),"","",""});
                //    partsoutTable.editCellAt(r+1, 2);
                }else{
                    JOptionPane.showMessageDialog(null, "Please enter a valid quantity","Invalid Quantity",JOptionPane.ERROR_MESSAGE);
                }

            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please fill in all the empty fields !","Alert",JOptionPane.WARNING_MESSAGE);
            }
            // studregTable.setSurrendersFocusOnKeystroke(true);
            //        studregTable.getEditorComponent().requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_partsoutTableKeyPressed
     public boolean vaidCheck()
{
if(partsoutTable.getCellEditor()!=null){
partsoutTable.getCellEditor().stopCellEditing();
}
for(int i=0;i< partsoutTable.getRowCount();i++)
{
for (int j=0;j<partsoutTable.getColumnCount();j++)
{
    try{
 String om=partsoutTable.getValueAt(i,j).toString();
System.out.println("Value ="+om+ " and Length :"+om.length());
if(om.trim().length()==0)
{
return false;
}   
    } catch(NullPointerException ex){
   // JOptionPane.showMessageDialog(null, "Cell is empty !");
    }
}
}
return true;
} 
          public static boolean isNumeric(String str){
return str.matches("-?\\d+(\\.\\d+)?");
} 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(cleintnameTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter Client Name!","Client Name Required",JOptionPane.WARNING_MESSAGE);
        }else if(dateinTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please select Date Out for Parts Stock Issue!","Date Out Required",JOptionPane.WARNING_MESSAGE);
        }
        else if(collectedby.equalsIgnoreCase("--Select Technician--")||collectedby==null){
   JOptionPane.showMessageDialog(null, "Please select Collected by!","Collected By Required",JOptionPane.WARNING_MESSAGE);     
        }
        else{
            int rows=partsoutTable.getRowCount();
            if(rows>0&& vaidCheck()){
  String status1="failed";
  if(checkQty(status1).equalsIgnoreCase("Pass")){
                int choice=JOptionPane.showConfirmDialog(null,"Do you want to issue selected Parts  to "+collectedby+" for service at "+cleintnoTxt.getText()+" ?","Confirm",JOptionPane.YES_NO_OPTION);
                if(choice==JOptionPane.YES_OPTION){
                    try {
                        Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
                        String insertstock="INSERT INTO PARTSTOCKOUT VALUES(?,?,?,?,?,?,?,?)";
                        PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(insertstock);
                        int b=0;
                        for(int g=0;g<rows;g++){
                            pst.setString(1,(partsoutTable.getValueAt(g, 1).toString()) );
                               pst.setString(2, partsoutTable.getValueAt(g, 4).toString() );
                          pst.setString(3, partsoutTable.getValueAt(g, 7).toString() );
                           pst.setInt(4, Integer.parseInt(partsoutTable.getValueAt(g, 6).toString()) );
                            pst.setDate(5, datein );
                           pst.setString(6,  collectedby);
                            pst.setString(7, issuedbyTxt.getText());
                        pst.setString(8,  cleintnameTxt.getText());
                  pst.executeUpdate();
  String updateqty="UPDATE PARTSTOCK SET QUANTITY=QUANTITY-"+Integer.parseInt(partsoutTable.getValueAt(g, 6).toString())+" WHERE "
          + "ENTRY_ID='"+partsoutTable.getValueAt(g, 1).toString()+"' ";                  
   PreparedStatement pst2=(PreparedStatement)connectDb.prepareStatement(updateqty);  
  b= pst2.executeUpdate();
                       
                        }
  if(b>0){
   getStock();
 JOptionPane.showMessageDialog(null, "Selected parts issued to "+collectedby+" successfully","Successfull",JOptionPane.INFORMATION_MESSAGE);
  }
                    } catch (SQLException ex) {
                        Logger.getLogger(Partstock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            }
            else{
  JOptionPane.showMessageDialog(null, "Please fill all empty fields in Parts Issue List!","All Fields Required",JOptionPane.WARNING_MESSAGE);          
            }            
        }
    }//GEN-LAST:event_jButton1ActionPerformed
 
    private void jPanel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseEntered
  if( issuedbyTxt.getText().isEmpty()) {  issuedbyTxt.setText(currentuser); } 
    }//GEN-LAST:event_jPanel4MouseEntered

    private void cityTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTxtActionPerformed

    private void partstockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_partstockTableMouseClicked

       int row=partstockTable.getSelectedRow();
        entryID=partstockTable.getValueAt(row, 2).toString();
        selectedpart=partstockTable.getValueAt(row, 6).toString();
        selectedclient=partstockTable.getValueAt(row, 3).toString();
     //   cleintnameTxt.setText(selectedclient);
  
 getParts();
  
     
    }//GEN-LAST:event_partstockTableMouseClicked
public void getParts(){
          try {
 Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
  String getstock=" SELECT  REFNO,TICKETNO,PARTNO,DESCRIPTION,QUANTITY,DATEIN,"
     + "RECEIVEDBY FROM PARTSTOCK WHERE ENTRY_ID='"+entryID+"'";
   int h=partsoutTable.getRowCount(); 
   int w=partsoutTable.getSelectedRow();
  for(int n=0;n<h;n++){
 // partsintableModel.removeRow(0);
  }
 // getClients();
 PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getstock);
  ResultSet rst=pst.executeQuery(); int f=0;
 
  while(rst.next()){
 if(h<1){
 partsouttableModel.addRow(new Object[]{false,entryID,rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),"",""});    
 }     
 else if(h>=1){      
  if(vaidCheck()&&isNumeric(partsoutTable.getValueAt(w, 6).toString())){
       String status1="failed";
  String status=checkQty(status1);
   if(status.equalsIgnoreCase("pass")){
    partsouttableModel.addRow(new Object[]{false,entryID,rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),"",""}); 
  }
   }   else{
 JOptionPane.showMessageDialog(null, "Please enter valid Quantity issued and Service Ticket Number!","Empty Fields Not Allowed",JOptionPane.WARNING_MESSAGE);
 }  
}
f++; 
  }
 
          } catch (SQLException ex) {
              Logger.getLogger(Partstock.class.getName()).log(Level.SEVERE, null, ex);
          }
}
    private void searchpartnoTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchpartnoTxtMouseClicked
        searchpartnoTxt.setText(null);
    }//GEN-LAST:event_searchpartnoTxtMouseClicked
 
    private void searchpartnoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchpartnoTxtKeyTyped
        getStock();
    }//GEN-LAST:event_searchpartnoTxtKeyTyped

    private void collectedbyComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collectedbyComboActionPerformed
     collectedby=""+collectedbyCombo.getSelectedItem();
    }//GEN-LAST:event_collectedbyComboActionPerformed

    private void partsoutTableInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_partsoutTableInputMethodTextChanged
int r=partsoutTable.getRowCount();
if(r>1){
  // checkQty();
}

    }//GEN-LAST:event_partsoutTableInputMethodTextChanged

    private void searchpartnoTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchpartnoTxtMouseEntered
       searchpartnoTxt.setForeground(Color.MAGENTA); 
    
    }//GEN-LAST:event_searchpartnoTxtMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Partstockout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Partstockout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Partstockout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Partstockout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Partstockout().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JTextField cityTxt;
    private javax.swing.JTextField cleintnameTxt;
    private javax.swing.JTextField cleintnoTxt;
    private javax.swing.JComboBox<String> collectedbyCombo;
    private javax.swing.JTextField dateinTxt;
    private javax.swing.JTextField issuedbyTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JScrollPane partsinScroll;
    private javax.swing.JTable partsoutTable;
    private javax.swing.JTable partstockTable;
    public javax.swing.JPanel partstockoutPanel;
    private javax.swing.JTextField searchpartnoTxt;
    // End of variables declaration//GEN-END:variables
}
