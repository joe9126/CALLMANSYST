
 
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JOE
 */
public class Partstock extends javax.swing.JFrame {
      Home access=new Home();
  String currentuser; java.sql.Date datein;    
  SimpleDateFormat sdf=new SimpleDateFormat("dd MMM,yyyy");
  
  String[] cols1={"","NO","ENTRY ID","OWNER","REF No.","TICKET No.","PART No.","DESCRIPT.","QTY ","DATE IN","RECEIVED BY"};
  
 DefaultTableModel partstocktableModel =new DefaultTableModel(cols1,0){
   @Override
   public boolean isCellEditable(int row,int column){
        return column == 0;
   }  }; 
 
  String[] cols={"","NO","REF No.","TICKET No.","PART No.","DESCRIPTION","QUANTITY "};
  DefaultTableModel partsintableModel=new DefaultTableModel(cols,0){
   @Override
   public boolean isCellEditable(int row,int column){
        return column == 0||column == 2||column == 3||column == 4||column == 5||column == 6;
   }  };
  String selectedpart,selectedclient,entryID;
    public Partstock() {
        initComponents();
 partsinTable.getTableHeader().setReorderingAllowed(false);
 partsinTable.getColumnModel().getColumn(0).setPreferredWidth(1);
  partsinTable.getColumnModel().getColumn(1).setPreferredWidth(1);
  
   partstockTable.getTableHeader().setReorderingAllowed(false);
 partstockTable.getColumnModel().getColumn(0).setPreferredWidth(1);
  partstockTable.getColumnModel().getColumn(1).setPreferredWidth(1);
  
   InputMap im=partsinTable.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT );
        KeyStroke enterkey=KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0);
        im.put(enterkey, enterkey);
         partsinTable.setSurrendersFocusOnKeystroke(true);
  TableColumn tc =partsinTable.getColumnModel().getColumn(0);
     tc.setCellEditor(partsinTable.getDefaultEditor(Boolean.class));
     tc.setCellRenderer(partsinTable.getDefaultRenderer(Boolean.class));  
      partsintableModel.addRow(new Object[]{false,"1","","","","",""}); 
        partsinTable.editCellAt(0, 2);
        
  TableColumn tc2 =partstockTable.getColumnModel().getColumn(0);
     tc2.setCellEditor(partstockTable.getDefaultEditor(Boolean.class));
     tc2.setCellRenderer(partstockTable.getDefaultRenderer(Boolean.class));         
    }

    public void getClients(){
        try {
            String getcontractsql="SELECT CLIENTNAME,CLIENT_NO,POBOX,TOWN,CONT_PERSON,MOBILE, EMAIL FROM CLIENTS WHERE CLIENTNAME LIKE "
                    + " '"+ cleintnameTxt.getText()+"%' ORDER BY CLIENTNAME DESC";
          
        Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
            PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getcontractsql);
            ResultSet rst=pst.executeQuery(); int i=0;
        while(rst.next()){
    cleintnoTxt.setText(rst.getString(2));  addressTxt.setText(rst.getString(3)); 
     cityTxt.setText(rst.getString(4));  /*contactpersonTxt.setText(rst.getString(5));  
     telephoneTxt.setText(rst.getString(6));  emailTxt.setText(rst.getString(7)); 
             
     */i++;  
            }if(i<1){
          cleintnoTxt.setText(null);  addressTxt.setText(null); 
     cityTxt.setText(null);  /*contactpersonTxt.setText(null);  
     telephoneTxt.setText(null);  emailTxt.setText(null);    */
      }
        }
        catch (SQLException ex) {
            Logger.getLogger(Calls.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        partstockPanel = new javax.swing.JPanel();
        stockinPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cleintnameTxt = new javax.swing.JTextField();
        cleintnoTxt = new javax.swing.JTextField();
        addressTxt = new javax.swing.JTextField();
        cityTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        dateinTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        receivedbyTxt = new javax.swing.JTextField();
        partsinScroll = new javax.swing.JScrollPane();
        partsinTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        partstockTable = new javax.swing.JTable();
        searchpartnoTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        partstockPanel.setBackground(new java.awt.Color(153, 0, 153));
        partstockPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PARTS STOCK", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        stockinPanel.setBackground(new java.awt.Color(153, 0, 153));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PARTS OWNER DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(204, 0, 204))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("CLIENT NAME:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("CLIENT NO:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("PO BOX:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("CITY:");

        cleintnameTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cleintnameTxtMouseExited(evt);
            }
        });
        cleintnameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cleintnameTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cleintnameTxtKeyTyped(evt);
            }
        });

        cleintnoTxt.setEditable(false);
        cleintnoTxt.setText(" ");

        addressTxt.setEditable(false);
        addressTxt.setText(" ");

        cityTxt.setEditable(false);
        cityTxt.setText(" ");
        cityTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel18)
                            .addGap(59, 59, 59)
                            .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cleintnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addGap(37, 37, 37)
                            .addComponent(addressTxt))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(19, 19, 19)
                            .addComponent(cleintnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cleintnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cleintnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PART DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 204))); // NOI18N
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel4MouseEntered(evt);
            }
        });

        jLabel1.setText("DATE IN:");

        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });

        dateinTxt.setEditable(false);

        jLabel2.setText("RECEIVED BY:");

        partsinTable.setModel(partsintableModel);
        partsinTable.setCellSelectionEnabled(true);
        partsinTable.setFillsViewportHeight(true);
        partsinTable.setGridColor(new java.awt.Color(204, 0, 204));
        partsinTable.setRowHeight(30);
        partsinTable.setRowMargin(2);
        partsinTable.setSelectionBackground(new java.awt.Color(204, 0, 204));
        partsinTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                partsinTableMouseClicked(evt);
            }
        });
        partsinTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                partsinTableKeyPressed(evt);
            }
        });
        partsinScroll.setViewportView(partsinTable);

        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("PRINT");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receivedbyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton1)
                .addGap(39, 39, 39)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
            .addComponent(partsinScroll)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(receivedbyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(partsinScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PARTS STOCK ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 153))); // NOI18N

        partstockTable.setModel(partstocktableModel);
        partstockTable.setFillsViewportHeight(true);
        partstockTable.setGridColor(new java.awt.Color(204, 0, 204));
        partstockTable.setRowHeight(25);
        partstockTable.setRowMargin(2);
        partstockTable.setSelectionBackground(new java.awt.Color(204, 0, 204));
        partstockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                partstockTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(partstockTable);

        searchpartnoTxt.setText("SEARCH PART NUMBER");
        searchpartnoTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchpartnoTxtMouseClicked(evt);
            }
        });
        searchpartnoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchpartnoTxtKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(searchpartnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(searchpartnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout stockinPanelLayout = new javax.swing.GroupLayout(stockinPanel);
        stockinPanel.setLayout(stockinPanelLayout);
        stockinPanelLayout.setHorizontalGroup(
            stockinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockinPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        stockinPanelLayout.setVerticalGroup(
            stockinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockinPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout partstockPanelLayout = new javax.swing.GroupLayout(partstockPanel);
        partstockPanel.setLayout(partstockPanelLayout);
        partstockPanelLayout.setHorizontalGroup(
            partstockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partstockPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(stockinPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        partstockPanelLayout.setVerticalGroup(
            partstockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partstockPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(stockinPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(partstockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(partstockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cleintnameTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cleintnameTxtMouseExited
       // cleintnameTxt.setText(clientsname);
    }//GEN-LAST:event_cleintnameTxtMouseExited

    private void cleintnameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cleintnameTxtKeyReleased
   
    }//GEN-LAST:event_cleintnameTxtKeyReleased

    private void cleintnameTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cleintnameTxtKeyTyped
    System.out.println("Client name typed "+cleintnameTxt.getText()); getClients();
    }//GEN-LAST:event_cleintnameTxtKeyTyped

    private void cityTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTxtActionPerformed

    private void partsinTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_partsinTableKeyPressed
    if(evt.getKeyCode()==10){
       int rowindex=partsinTable.getSelectedRow();
       int colindex=partsinTable.getSelectedColumn();
       partsinTable.editCellAt(rowindex+1, 2);
       evt.consume();
//     studregTable.setColumnSelectionInterval(rowindex, colindex+1);
  if(vaidCheck())
{
int row=partsinTable.getRowCount();
int r=partsinTable.getSelectedRow();

  String qty=(partsinTable.getValueAt(rowindex,6).toString());
if(isNumeric(qty)){
    
 String partno=(partsinTable.getValueAt(rowindex,4).toString());
for(int c=0;c<row-1;c++){
if(partno.equalsIgnoreCase(partsinTable.getValueAt(c,4).toString())){
partsinTable.setValueAt("", rowindex, 4);  
}
} 
  partsintableModel.addRow(new Object[]{false,row+1,partsinTable.getValueAt(r, 2),partsinTable.getValueAt(r, 3),"","",""});
   partsinTable.editCellAt(r+1, 2);
}else{
JOptionPane.showMessageDialog(null, "Please enter a valid quantity","Invalid Quantity",JOptionPane.ERROR_MESSAGE);
}

}
else
{
JOptionPane.showMessageDialog(null,"Please fill in all the empty fields !","Alert",JOptionPane.WARNING_MESSAGE);
}
      // studregTable.setSurrendersFocusOnKeystroke(true);
//        studregTable.getEditorComponent().requestFocus();
       }      
// TODO add your handling code here:
    }//GEN-LAST:event_partsinTableKeyPressed

    private void jPanel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseEntered
if( receivedbyTxt.getText().isEmpty()) { receivedbyTxt.setText(currentuser); }
    }//GEN-LAST:event_jPanel4MouseEntered

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed
      datein=new java.sql.Date(jXDatePicker1.getDate().getTime());
      dateinTxt.setText(sdf.format(datein));  
    }//GEN-LAST:event_jXDatePicker1ActionPerformed

    private void searchpartnoTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchpartnoTxtMouseClicked
     searchpartnoTxt.setText(null);
    }//GEN-LAST:event_searchpartnoTxtMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  if(cleintnoTxt.getText().isEmpty()){
  JOptionPane.showMessageDialog(null, "Please enter Client Name!","Client Name Required",JOptionPane.WARNING_MESSAGE);
  }else if(dateinTxt.getText().isEmpty()){
  JOptionPane.showMessageDialog(null, "Please select Date In for new Stock!","Date In Required",JOptionPane.WARNING_MESSAGE);
  }
  else{
  int rows=partsinTable.getRowCount();
  if(rows>0&& vaidCheck()){
 int choice=JOptionPane.showConfirmDialog(null,"Do you want to save Parts Stock for "+cleintnameTxt.getText()+"?","Confirm",JOptionPane.YES_NO_OPTION);
if(choice==JOptionPane.YES_OPTION){
     try {
        Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
         String insertstock="INSERT INTO PARTSTOCK VALUES(?,?,?,?,?,?,?,?,?)";
         PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(insertstock);
int b=0;
   
 for(int g=0;g<rows;g++){
Random randomnumber=new Random(); int loannumber;
  loannumber=randomnumber.nextInt(10000-1)+1;
  int year=LocalDate.now().getYear();
String entryid="STOCK"+year+"/"+loannumber;  
    pst.setString(1,entryid);  
  pst.setString(2, cleintnoTxt.getText());
  pst.setString(3, partsinTable.getValueAt(g, 2).toString() ); 
   pst.setString(4, partsinTable.getValueAt(g, 3).toString() ); 
    pst.setString(5, partsinTable.getValueAt(g, 4).toString() ); 
     pst.setString(6, partsinTable.getValueAt(g, 5).toString() ); 
      pst.setInt(7, Integer.parseInt(partsinTable.getValueAt(g, 6).toString()) ); 
     pst.setDate(8, datein ); 
       pst.setString(9,  receivedbyTxt.getText());  
       b=pst.executeUpdate();
 }
if(b>0){
 getStock(); 
JOptionPane.showMessageDialog(null, "New parts added to "+cleintnameTxt.getText()+" Stock successfully","Successfull",JOptionPane.INFORMATION_MESSAGE);
} 
     } catch (SQLException ex) {
         Logger.getLogger(Partstock.class.getName()).log(Level.SEVERE, null, ex);
     }
}  
  }
  }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchpartnoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchpartnoTxtKeyTyped
    getStock();
    }//GEN-LAST:event_searchpartnoTxtKeyTyped

    private void partstockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_partstockTableMouseClicked
   int row=partstockTable.getSelectedRow();
   entryID=partstockTable.getValueAt(row, 2).toString();
        selectedpart=partstockTable.getValueAt(row,6).toString();
        selectedclient=partstockTable.getValueAt(row, 3).toString();
        cleintnameTxt.setText(selectedclient); 
        getParts(); 
    }//GEN-LAST:event_partstockTableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       TableModel model1=partstockTable.getModel(); String partno=null;
    String ticketno,refno;
      for(int i=0; i<model1.getRowCount();i++){
       if((Boolean) model1.getValueAt(i,0)){
     partno=partstockTable.getModel().getValueAt(i,5).toString();
      }
     }
        if(partno==null){
  JOptionPane.showMessageDialog(rootPane,"Please select at least one part from the Parts stock records below !","No Part Selected",JOptionPane.WARNING_MESSAGE);
      }
        else{
    int choice=JOptionPane.showConfirmDialog(rootPane, "Do you want to delete selected parts in stock ?","Confirm",JOptionPane.YES_NO_OPTION);
           if(choice==JOptionPane.YES_OPTION)  {
        try {
            Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
            PreparedStatement  pstdel;
            String delsql; int t=0;
            for(int i=0; i<model1.getRowCount();i++){
                if((Boolean) model1.getValueAt(i,0)){
                    partno=partstockTable.getModel().getValueAt(i,5).toString();
                    ticketno=partstockTable.getModel().getValueAt(i,4).toString();
                    refno=partstockTable.getModel().getValueAt(i,3).toString();
                    delsql="DELETE FROM PARTSTOCK WHERE PARTNO='"+partno+"' AND TICKETNO ='"+ticketno+"' AND REFNO ='"+refno+"'";
                    pstdel=(PreparedStatement)connectDb.prepareStatement(delsql);
                    System.out.println("QUERY  USED:"+delsql);   
                  t=pstdel.executeUpdate();
                  System.out.println("PART NO;"+partno+" REFNO  "+refno+" TICKETNO "+ticketno);
                }              
            }
if(t>0){
    getStock();
JOptionPane.showMessageDialog(null, "Selected parts deleted from "+cleintnameTxt.getText()+" Parts Stock successfully!","Successful",JOptionPane.INFORMATION_MESSAGE );
}            
        
        } catch (SQLException ex) {
            Logger.getLogger(Partstock.class.getName()).log(Level.SEVERE, null, ex);
        }
           
           }     
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void partsinTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_partsinTableMouseClicked
   TableModel model1=partstockTable.getModel(); String partno=null;
    String ticketno,refno;
    
      for(int i=0; i<model1.getRowCount();i++){
       if((Boolean) model1.getValueAt(i,0)){
   partsintableModel.removeRow(0);
      }
     }
    }//GEN-LAST:event_partsinTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  if(cleintnoTxt.getText().isEmpty()){
  JOptionPane.showMessageDialog(null, "Please enter Client Name!","Client Name Required",JOptionPane.WARNING_MESSAGE);
  }
  else{
  int rows=partsinTable.getRowCount();
  if(rows>0&& vaidCheck()){
 int choice=JOptionPane.showConfirmDialog(null,"Do you want to update selected Parts details ?","Confirm",JOptionPane.YES_NO_OPTION);
if(choice==JOptionPane.YES_OPTION){
     try {
         Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
         String updatesql;PreparedStatement pst;
         String entryid; int u=0;
         for(int k=0;k<rows;k++){
              entryid=  partsinTable.getValueAt(k, 1).toString() ; 
             if(datein!=null){
  updatesql="UPDATE PARTSTOCK SET client_no=?,REFNO=?, TICKETNO=?,PARTNO=?, DESCRIPTION=?, QUANTITY=?, DATEIN=?,RECEIVEDBY=? WHERE ENTRY_ID='"+entryid+"'";
  pst=(PreparedStatement)connectDb.prepareStatement(updatesql);
  pst.setString(1, cleintnoTxt.getText());
  pst.setString(2, partsinTable.getValueAt(k, 2).toString() ); 
   pst.setString(3, partsinTable.getValueAt(k, 3).toString() ); 
    pst.setString(4, partsinTable.getValueAt(k, 4).toString() ); 
     pst.setString(5, partsinTable.getValueAt(k, 5).toString() ); 
      pst.setInt(6, Integer.parseInt(partsinTable.getValueAt(k, 6).toString()) ); 
     pst.setDate(7, datein ); 
       pst.setString(8,  receivedbyTxt.getText());  
       
    }else{
   updatesql="UPDATE PARTSTOCK SET client_no=?,REFNO=?, TICKETNO=?,PARTNO=?, DESCRIPTION=?, QUANTITY=?,RECEIVEDBY=?  WHERE ENTRY_ID='"+entryid+"'";
     pst=(PreparedStatement)connectDb.prepareStatement(updatesql);
      pst.setString(1, cleintnoTxt.getText());
   pst.setString(2, partsinTable.getValueAt(k, 2).toString() ); 
   pst.setString(3, partsinTable.getValueAt(k, 3).toString() ); 
    pst.setString(4, partsinTable.getValueAt(k, 4).toString() ); 
     pst.setString(5, partsinTable.getValueAt(k, 5).toString() ); 
      pst.setInt(6, Integer.parseInt(partsinTable.getValueAt(k, 6).toString()) ); 
     pst.setString(7,  receivedbyTxt.getText());  
             }
 u=pst.executeUpdate();
         }
 if(u>0){
     getStock();
 JOptionPane.showMessageDialog(null, "Selected parts details updated successfully!","Successful",JOptionPane.INFORMATION_MESSAGE);
 }        
     } catch (SQLException ex) {
         Logger.getLogger(Partstock.class.getName()).log(Level.SEVERE, null, ex);
     }
}
  }
  }
    }//GEN-LAST:event_jButton2ActionPerformed
public void getParts(){
          try {
 Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
  String getstock=" SELECT  REFNO,TICKETNO,PARTNO,DESCRIPTION,QUANTITY,DATEIN,"
     + "RECEIVEDBY FROM PARTSTOCK WHERE ENTRY_ID='"+entryID+"'";
   int h=partsinTable.getRowCount();
  for(int n=0;n<h;n++){
  partsintableModel.removeRow(0);
  }
 PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getstock);
  ResultSet rst=pst.executeQuery(); int f=0;
 
  while(rst.next()){
 partsintableModel.addRow(new Object[]{false,entryID,rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),rst.getInt(5)}); 
receivedbyTxt.setText(rst.getString(7)); dateinTxt.setText(sdf.format(rst.getDate(6))); 
 f++; }
 getClients();
          } catch (SQLException ex) {
              Logger.getLogger(Partstock.class.getName()).log(Level.SEVERE, null, ex);
          }
}
 public void getStock(){
          try {
  Connection connectDb=(Connection)DriverManager.getConnection( access.server,  access.username, access.dbpword);
  String getstock=" SELECT PARTSTOCK.CLIENT_NO, PARTSTOCK.REFNO,PARTSTOCK.TICKETNO,PARTSTOCK.PARTNO,PARTSTOCK.DESCRIPTION,PARTSTOCK.QUANTITY,PARTSTOCK.DATEIN,"
          + "PARTSTOCK.RECEIVEDBY,CLIENTS.CLIENTNAME,PARTSTOCK.ENTRY_ID FROM PARTSTOCK LEFT JOIN CLIENTS ON PARTSTOCK.CLIENT_NO=CLIENTS.CLIENT_NO ORDER BY "
          + "PARTSTOCK.DATEIN DESC";
  
 if(!searchpartnoTxt.getText().isEmpty()&&!searchpartnoTxt.getText().equalsIgnoreCase("search part number")){
 getstock=" SELECT PARTSTOCK.CLIENT_NO, PARTSTOCK.REFNO,PARTSTOCK.TICKETNO,PARTSTOCK.PARTNO,PARTSTOCK.DESCRIPTION,PARTSTOCK.QUANTITY,PARTSTOCK.DATEIN,"
          + "PARTSTOCK.RECEIVEDBY,CLIENTS.CLIENTNAME,PARTSTOCK.ENTRY_ID FROM PARTSTOCK LEFT JOIN CLIENTS ON PARTSTOCK.CLIENT_NO=CLIENTS.CLIENT_NO "
          + " where PARTSTOCK.PARTNO LIKE '"+searchpartnoTxt.getText()+"%' ORDER BY "
          + "PARTSTOCK.DATEIN DESC";
  
 } 
 else if(!cleintnameTxt.getText().isEmpty()){
 getstock=" SELECT PARTSTOCK.CLIENT_NO, PARTSTOCK.REFNO,PARTSTOCK.TICKETNO,PARTSTOCK.PARTNO,PARTSTOCK.DESCRIPTION,PARTSTOCK.QUANTITY,PARTSTOCK.DATEIN,"
          + "PARTSTOCK.RECEIVEDBY,CLIENTS.CLIENTNAME,PARTSTOCK.ENTRY_ID FROM PARTSTOCK LEFT JOIN CLIENTS ON PARTSTOCK.CLIENT_NO=CLIENTS.CLIENT_NO "
          + " where CLIENTS.CLIENTNAME LIKE '"+cleintnameTxt.getText()+"%'ORDER BY "
          + "PARTSTOCK.DATEIN DESC";
  }
 
  PreparedStatement pst=(PreparedStatement)connectDb.prepareStatement(getstock);
  ResultSet rst=pst.executeQuery();
  int f=partstockTable.getRowCount(); int z=0;
  for(int x=0;x<f;x++){
  partstocktableModel.removeRow(0);
  }
  while(rst.next()){
  partstocktableModel.addRow(new Object[]{false,z+1,rst.getString(10),rst.getString(9),rst.getString(2),rst.getString(3),rst.getString(4),rst.getString(5),
  rst.getInt(6),sdf.format(rst.getDate(7)),rst.getString(8)}); 
 z++; }
          } catch (SQLException ex) {
              Logger.getLogger(Partstock.class.getName()).log(Level.SEVERE, null, ex);
          }
 
 }   
    
     public boolean vaidCheck()
{
if(partsinTable.getCellEditor()!=null){
partsinTable.getCellEditor().stopCellEditing();
}
for(int i=0;i< partsinTable.getRowCount();i++)
{
for (int j=0;j<partsinTable.getColumnCount();j++)
{
    try{
 String om=partsinTable.getValueAt(i,j).toString();
System.out.println("Value ="+om+ " and Length :"+om.length());
if(om.trim().length()==0)
{
return false;
}   
    } catch(NullPointerException ex){
   // JOptionPane.showMessageDialog(null, "Cell is empty !");
    }
}
}
return true;
} 
     
     public static boolean isNumeric(String str){
return str.matches("-?\\d+(\\.\\d+)?");
} 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Partstock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Partstock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Partstock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Partstock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Partstock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JTextField cityTxt;
    private javax.swing.JTextField cleintnameTxt;
    private javax.swing.JTextField cleintnoTxt;
    private javax.swing.JTextField dateinTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JScrollPane partsinScroll;
    private javax.swing.JTable partsinTable;
    public javax.swing.JPanel partstockPanel;
    private javax.swing.JTable partstockTable;
    private javax.swing.JTextField receivedbyTxt;
    private javax.swing.JTextField searchpartnoTxt;
    private javax.swing.JPanel stockinPanel;
    // End of variables declaration//GEN-END:variables
}
